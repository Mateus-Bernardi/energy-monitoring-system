

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jun 27 17:43:43 2024

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39  0000                     
    40                           ; Version 2.32
    41                           ; Generated 02/02/2021 GMT
    42                           ; 
    43                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F4550 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     
    76                           	psect	idataCOMRAM
    77  0011E8                     __pidataCOMRAM:
    78                           	callstack 0
    79                           
    80                           ;initializer for assign_default_password@F4252
    81  0011E8  31                 	db	49
    82  0011E9  32                 	db	50
    83  0011EA  33                 	db	51
    84  0011EB  34                 	db	52
    85  0011EC  00                 	db	0
    86                           
    87                           	psect	smallconst
    88  000800                     __psmallconst:
    89                           	callstack 0
    90  000800  00                 	db	0
    91  000801                     read_keypad@F4231:
    92                           	callstack 0
    93  000801  41                 	db	65
    94  000802  42                 	db	66
    95  000803  43                 	db	67
    96  000804  44                 	db	68
    97  000805  33                 	db	51
    98  000806  36                 	db	54
    99  000807  39                 	db	57
   100  000808  23                 	db	35
   101  000809  32                 	db	50
   102  00080A  35                 	db	53
   103  00080B  38                 	db	56
   104  00080C  30                 	db	48
   105  00080D  31                 	db	49
   106  00080E  34                 	db	52
   107  00080F  37                 	db	55
   108  000810  2A                 	db	42
   109  000811                     __end_ofread_keypad@F4231:
   110                           	callstack 0
   111  0000                     _PORTBbits	set	3969
   112  0000                     _PIR2bits	set	4001
   113  0000                     _EECON2	set	4007
   114  0000                     _INTCONbits	set	4082
   115  0000                     _EECON1bits	set	4006
   116  0000                     _EEDATA	set	4008
   117  0000                     _EEADR	set	4009
   118  0000                     _PORTDbits	set	3971
   119  0000                     _ADCON2	set	4032
   120  0000                     _ADCON1	set	4033
   121  0000                     _ADCON0	set	4034
   122  0000                     _TRISB	set	3987
   123  0000                     _TRISA	set	3986
   124  0000                     _TRISCbits	set	3988
   125  0000                     _LATEbits	set	3981
   126  0000                     _TRISEbits	set	3990
   127  0000                     _TRISD	set	3989
   128  0000                     _PORTD	set	3971
   129  0000                     _WR	set	32049
   130  0000                     _RBPU	set	32655
   131  000811                     STR_3:
   132  000811  33                 	db	51	;'3'
   133  000812  2D                 	db	45
   134  000813  41                 	db	65	;'A'
   135  000814  6C                 	db	108	;'l'
   136  000815  74                 	db	116	;'t'
   137  000816  65                 	db	101	;'e'
   138  000817  72                 	db	114	;'r'
   139  000818  61                 	db	97	;'a'
   140  000819  72                 	db	114	;'r'
   141  00081A  20                 	db	32
   142  00081B  73                 	db	115	;'s'
   143  00081C  65                 	db	101	;'e'
   144  00081D  6E                 	db	110	;'n'
   145  00081E  68                 	db	104	;'h'
   146  00081F  61                 	db	97	;'a'
   147  000820  00                 	db	0
   148  000821                     STR_2:
   149  000821  32                 	db	50	;'2'
   150  000822  2D                 	db	45
   151  000823  43                 	db	67	;'C'
   152  000824  6F                 	db	111	;'o'
   153  000825  6E                 	db	110	;'n'
   154  000826  66                 	db	102	;'f'
   155  000827  69                 	db	105	;'i'
   156  000828  67                 	db	103	;'g'
   157  000829  75                 	db	117	;'u'
   158  00082A  72                 	db	114	;'r'
   159  00082B  61                 	db	97	;'a'
   160  00082C  63                 	db	99	;'c'
   161  00082D  6F                 	db	111	;'o'
   162  00082E  65                 	db	101	;'e'
   163  00082F  73                 	db	115	;'s'
   164  000830  00                 	db	0
   165  000831                     STR_5:
   166  000831  53                 	db	83	;'S'
   167  000832  65                 	db	101	;'e'
   168  000833  6E                 	db	110	;'n'
   169  000834  68                 	db	104	;'h'
   170  000835  61                 	db	97	;'a'
   171  000836  20                 	db	32
   172  000837  41                 	db	65	;'A'
   173  000838  6C                 	db	108	;'l'
   174  000839  74                 	db	116	;'t'
   175  00083A  65                 	db	101	;'e'
   176  00083B  72                 	db	114	;'r'
   177  00083C  61                 	db	97	;'a'
   178  00083D  64                 	db	100	;'d'
   179  00083E  61                 	db	97	;'a'
   180  00083F  00                 	db	0
   181  000840                     STR_9:
   182  000840  53                 	db	83	;'S'
   183  000841  65                 	db	101	;'e'
   184  000842  6E                 	db	110	;'n'
   185  000843  68                 	db	104	;'h'
   186  000844  61                 	db	97	;'a'
   187  000845  20                 	db	32
   188  000846  49                 	db	73	;'I'
   189  000847  6E                 	db	110	;'n'
   190  000848  76                 	db	118	;'v'
   191  000849  61                 	db	97	;'a'
   192  00084A  6C                 	db	108	;'l'
   193  00084B  69                 	db	105	;'i'
   194  00084C  64                 	db	100	;'d'
   195  00084D  61                 	db	97	;'a'
   196  00084E  00                 	db	0
   197  00084F                     STR_8:
   198  00084F  53                 	db	83	;'S'
   199  000850  65                 	db	101	;'e'
   200  000851  6E                 	db	110	;'n'
   201  000852  68                 	db	104	;'h'
   202  000853  61                 	db	97	;'a'
   203  000854  20                 	db	32
   204  000855  43                 	db	67	;'C'
   205  000856  6F                 	db	111	;'o'
   206  000857  72                 	db	114	;'r'
   207  000858  72                 	db	114	;'r'
   208  000859  65                 	db	101	;'e'
   209  00085A  74                 	db	116	;'t'
   210  00085B  61                 	db	97	;'a'
   211  00085C  00                 	db	0
   212  00085D                     STR_4:
   213  00085D  4E                 	db	78	;'N'
   214  00085E  6F                 	db	111	;'o'
   215  00085F  76                 	db	118	;'v'
   216  000860  61                 	db	97	;'a'
   217  000861  20                 	db	32
   218  000862  53                 	db	83	;'S'
   219  000863  65                 	db	101	;'e'
   220  000864  6E                 	db	110	;'n'
   221  000865  68                 	db	104	;'h'
   222  000866  61                 	db	97	;'a'
   223  000867  3A                 	db	58	;':'
   224  000868  00                 	db	0
   225  000869                     STR_1:
   226  000869  31                 	db	49	;'1'
   227  00086A  2D                 	db	45
   228  00086B  49                 	db	73	;'I'
   229  00086C  6E                 	db	110	;'n'
   230  00086D  69                 	db	105	;'i'
   231  00086E  63                 	db	99	;'c'
   232  00086F  69                 	db	105	;'i'
   233  000870  61                 	db	97	;'a'
   234  000871  72                 	db	114	;'r'
   235  000872  00                 	db	0
   236  000873                     STR_6:
   237  000873  54                 	db	84	;'T'
   238  000874  65                 	db	101	;'e'
   239  000875  73                 	db	115	;'s'
   240  000876  74                 	db	116	;'t'
   241  000877  65                 	db	101	;'e'
   242  000878  31                 	db	49	;'1'
   243  000879  00                 	db	0
   244  00087A  00                 	db	0	; dummy byte at the end
   245  0000                     
   246                           ; #config settings
   247                           
   248                           	psect	cinit
   249  00116A                     __pcinit:
   250                           	callstack 0
   251  00116A                     start_initialization:
   252                           	callstack 0
   253  00116A                     __initialization:
   254                           	callstack 0
   255                           
   256                           ; Initialize objects allocated to COMRAM (5 bytes)
   257                           ; load TBLPTR registers with __pidataCOMRAM
   258  00116A  0EE8               	movlw	low __pidataCOMRAM
   259  00116C  6EF6               	movwf	tblptrl,c
   260  00116E  0E11               	movlw	high __pidataCOMRAM
   261  001170  6EF7               	movwf	tblptrh,c
   262  001172  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   263  001174  6EF8               	movwf	tblptru,c
   264  001176  EE00  F02F         	lfsr	0,__pdataCOMRAM
   265  00117A  EE10 F005          	lfsr	1,5
   266  00117E                     copy_data0:
   267  00117E  0009               	tblrd		*+
   268  001180  CFF5 FFEE          	movff	tablat,postinc0
   269  001184  50E5               	movf	postdec1,w,c
   270  001186  50E1               	movf	fsr1l,w,c
   271  001188  E1FA               	bnz	copy_data0
   272  00118A                     end_of_initialization:
   273                           	callstack 0
   274  00118A                     __end_of__initialization:
   275                           	callstack 0
   276  00118A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   277  00118C  6EF8               	movwf	tblptru,c
   278  00118E  0100               	movlb	0
   279  001190  EF38  F005         	goto	_main	;jump to C main() function
   280                           
   281                           	psect	dataCOMRAM
   282  00002F                     __pdataCOMRAM:
   283                           	callstack 0
   284  00002F                     assign_default_password@F4252:
   285                           	callstack 0
   286  00002F                     	ds	5
   287                           
   288                           	psect	cstackCOMRAM
   289  000001                     __pcstackCOMRAM:
   290                           	callstack 0
   291  000001                     ??_DelayPORXLCD:
   292  000001                     ??_DelayXLCD:
   293  000001                     ??_read_keypad:
   294  000001                     ?_isdigit:
   295                           	callstack 0
   296  000001                     ?_strcmp:
   297                           	callstack 0
   298  000001                     SetDDRamAddr@DDaddr:
   299                           	callstack 0
   300  000001                     WriteCmdXLCD@cmd:
   301                           	callstack 0
   302  000001                     WriteDataXLCD@data:
   303                           	callstack 0
   304  000001                     EEPROM_Write@data:
   305                           	callstack 0
   306  000001                     EEPROM_Read@address:
   307                           	callstack 0
   308  000001                     isdigit@c:
   309                           	callstack 0
   310  000001                     strcmp@l:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x0
   314  000001                     	ds	1
   315  000002                     ??_clean_lcd:
   316  000002                     ?_has_passwords:
   317                           	callstack 0
   318  000002                     OpenXLCD@lcdtype:
   319                           	callstack 0
   320  000002                     EEPROM_Write@address:
   321                           	callstack 0
   322  000002                     putsXLCD@buffer:
   323                           	callstack 0
   324  000002                     EEPROM_read_user@password:
   325                           	callstack 0
   326                           
   327                           ; 2 bytes @ 0x1
   328  000002                     	ds	1
   329  000003                     ??_isdigit:
   330  000003                     EEPROM_write_user@password:
   331                           	callstack 0
   332  000003                     strcmp@r:
   333                           	callstack 0
   334  000003                     read_keypad@keys:
   335                           	callstack 0
   336                           
   337                           ; 16 bytes @ 0x2
   338  000003                     	ds	1
   339  000004                     EEPROM_read_user@address:
   340                           	callstack 0
   341  000004                     has_passwords@address:
   342                           	callstack 0
   343                           
   344                           ; 1 bytes @ 0x3
   345  000004                     	ds	1
   346  000005                     ??_strcmp:
   347  000005                     EEPROM_write_user@address:
   348                           	callstack 0
   349  000005                     EEPROM_read_user@i:
   350                           	callstack 0
   351                           
   352                           ; 1 bytes @ 0x4
   353  000005                     	ds	1
   354  000006                     EEPROM_write_user@i:
   355                           	callstack 0
   356                           
   357                           ; 1 bytes @ 0x5
   358  000006                     	ds	1
   359  000007                     ?_check_password:
   360                           	callstack 0
   361  000007                     check_password@input:
   362                           	callstack 0
   363  000007                     assign_default_password@default_password:
   364                           	callstack 0
   365                           
   366                           ; 5 bytes @ 0x6
   367  000007                     	ds	2
   368  000009                     check_password@stored_password:
   369                           	callstack 0
   370                           
   371                           ; 5 bytes @ 0x8
   372  000009                     	ds	10
   373  000013                     read_keypad@col:
   374                           	callstack 0
   375                           
   376                           ; 2 bytes @ 0x12
   377  000013                     	ds	2
   378  000015                     get_password@password:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0x14
   382  000015                     	ds	2
   383  000017                     ??_get_password:
   384                           
   385                           ; 1 bytes @ 0x16
   386  000017                     	ds	4
   387  00001B                     _get_password$469:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x1A
   391  00001B                     	ds	2
   392  00001D                     get_password@index:
   393                           	callstack 0
   394                           
   395                           ; 2 bytes @ 0x1C
   396  00001D                     	ds	2
   397  00001F                     get_password@key:
   398                           	callstack 0
   399                           
   400                           ; 1 bytes @ 0x1E
   401  00001F                     	ds	1
   402  000020                     ??_set_password:
   403                           
   404                           ; 1 bytes @ 0x1F
   405  000020                     	ds	2
   406  000022                     set_password@new_password:
   407                           	callstack 0
   408                           
   409                           ; 5 bytes @ 0x21
   410  000022                     	ds	5
   411  000027                     ??_main:
   412                           
   413                           ; 1 bytes @ 0x26
   414  000027                     	ds	2
   415  000029                     main@password:
   416                           	callstack 0
   417                           
   418                           ; 5 bytes @ 0x28
   419  000029                     	ds	5
   420  00002E                     main@key:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0x2D
   424  00002E                     	ds	1
   425                           
   426 ;;
   427 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   428 ;;
   429 ;; *************** function _main *****************
   430 ;; Defined at:
   431 ;;		line 291 in file "main.c"
   432 ;; Parameters:    Size  Location     Type
   433 ;;		None
   434 ;; Auto vars:     Size  Location     Type
   435 ;;  int_str        20    0        unsigned char [20]
   436 ;;  password        5   40[COMRAM] unsigned char [5]
   437 ;;  key             1   45[COMRAM] unsigned char 
   438 ;; Return value:  Size  Location     Type
   439 ;;                  1    wreg      void 
   440 ;; Registers used:
   441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   442 ;; Tracked objects:
   443 ;;		On entry : 0/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   447 ;;      Params:         0       0       0       0       0       0       0       0       0
   448 ;;      Locals:         6       0       0       0       0       0       0       0       0
   449 ;;      Temps:          2       0       0       0       0       0       0       0       0
   450 ;;      Totals:         8       0       0       0       0       0       0       0       0
   451 ;;Total ram usage:        8 bytes
   452 ;; Hardware stack levels required when called: 4
   453 ;; This function calls:
   454 ;;		_WriteCmdXLCD
   455 ;;		_assign_default_password
   456 ;;		_check_password
   457 ;;		_clean_lcd
   458 ;;		_get_password
   459 ;;		_initSystem
   460 ;;		_putsXLCD
   461 ;;		_read_keypad
   462 ;;		_set_password
   463 ;;		_show_initial
   464 ;; This function is called by:
   465 ;;		Startup code after reset
   466 ;; This function uses a non-reentrant model
   467 ;;
   468                           
   469                           	psect	text0
   470  000A70                     __ptext0:
   471                           	callstack 0
   472  000A70                     _main:
   473                           	callstack 27
   474  000A70                     
   475                           ;main.c: 292:     initSystem();
   476  000A70  EC9E  F008         	call	_initSystem	;wreg free
   477  000A74                     
   478                           ;main.c: 293:     assign_default_password();
   479  000A74  EC51  F008         	call	_assign_default_password	;wreg free
   480  000A78                     l1918:
   481                           
   482                           ;main.c: 298:         _delay((unsigned long)((80)*(20000000/4000.0)));
   483  000A78  0E03               	movlw	3
   484  000A7A  6E28               	movwf	(??_main+1)^0,c
   485  000A7C  0E08               	movlw	8
   486  000A7E  6E27               	movwf	??_main^0,c
   487  000A80  0E77               	movlw	119
   488  000A82                     u837:
   489  000A82  2EE8               	decfsz	wreg,f,c
   490  000A84  D7FE               	bra	u837
   491  000A86  2E27               	decfsz	??_main^0,f,c
   492  000A88  D7FC               	bra	u837
   493  000A8A  2E28               	decfsz	(??_main+1)^0,f,c
   494  000A8C  D7FA               	bra	u837
   495  000A8E  F000               	nop	
   496  000A90                     
   497                           ;main.c: 299:         key = read_keypad();
   498  000A90  EC3E  F004         	call	_read_keypad	;wreg free
   499  000A94  6E2E               	movwf	main@key^0,c
   500  000A96                     
   501                           ;main.c: 300:         show_initial();
   502  000A96  EC17  F008         	call	_show_initial	;wreg free
   503  000A9A                     
   504                           ;main.c: 301:         char int_str[20];;main.c: 302:         if (key != '\0') {
   505  000A9A  502E               	movf	main@key^0,w,c
   506  000A9C  B4D8               	btfsc	status,2,c
   507  000A9E  EF53  F005         	goto	u781
   508  000AA2  EF55  F005         	goto	u780
   509  000AA6                     u781:
   510  000AA6  EF3C  F005         	goto	l1918
   511  000AAA                     u780:
   512  000AAA                     
   513                           ;main.c: 303:             if (key == '1') {
   514  000AAA  0E31               	movlw	49
   515  000AAC  182E               	xorwf	main@key^0,w,c
   516  000AAE  A4D8               	btfss	status,2,c
   517  000AB0  EF5C  F005         	goto	u791
   518  000AB4  EF5E  F005         	goto	u790
   519  000AB8                     u791:
   520  000AB8  EF75  F005         	goto	l1934
   521  000ABC                     u790:
   522  000ABC                     
   523                           ;main.c: 304:                 clean_lcd();
   524  000ABC  ECCA  F008         	call	_clean_lcd	;wreg free
   525                           
   526                           ;main.c: 305:                 WriteCmdXLCD(0x80);
   527  000AC0  0E80               	movlw	128
   528  000AC2  ECD9  F007         	call	_WriteCmdXLCD
   529  000AC6                     
   530                           ;main.c: 306:                 putsXLCD("Teste1");
   531  000AC6  0E73               	movlw	low STR_6
   532  000AC8  6E02               	movwf	putsXLCD@buffer^0,c
   533  000ACA  0E08               	movlw	high STR_6
   534  000ACC  6E03               	movwf	(putsXLCD@buffer+1)^0,c
   535  000ACE  EC0F  F007         	call	_putsXLCD	;wreg free
   536  000AD2                     
   537                           ;main.c: 307:                 _delay((unsigned long)((1000)*(20000000/4000.0)));
   538  000AD2  0E1A               	movlw	26
   539  000AD4  6E28               	movwf	(??_main+1)^0,c
   540  000AD6  0E5E               	movlw	94
   541  000AD8  6E27               	movwf	??_main^0,c
   542  000ADA  0E6E               	movlw	110
   543  000ADC                     u847:
   544  000ADC  2EE8               	decfsz	wreg,f,c
   545  000ADE  D7FE               	bra	u847
   546  000AE0  2E27               	decfsz	??_main^0,f,c
   547  000AE2  D7FC               	bra	u847
   548  000AE4  2E28               	decfsz	(??_main+1)^0,f,c
   549  000AE6  D7FA               	bra	u847
   550  000AE8  D000               	nop2	
   551  000AEA                     l1934:
   552                           
   553                           ;main.c: 309:             if (key == '2') {
   554  000AEA  0E32               	movlw	50
   555  000AEC  182E               	xorwf	main@key^0,w,c
   556  000AEE  A4D8               	btfss	status,2,c
   557  000AF0  EF7C  F005         	goto	u801
   558  000AF4  EF7E  F005         	goto	u800
   559  000AF8                     u801:
   560  000AF8  EFC6  F005         	goto	l1958
   561  000AFC                     u800:
   562  000AFC                     
   563                           ;main.c: 310:                 clean_lcd();
   564  000AFC  ECCA  F008         	call	_clean_lcd	;wreg free
   565                           
   566                           ;main.c: 311:                 WriteCmdXLCD(0x80);
   567  000B00  0E80               	movlw	128
   568  000B02  ECD9  F007         	call	_WriteCmdXLCD
   569  000B06                     
   570                           ;main.c: 312:                 putsXLCD("Senha:");
   571  000B06  0E62               	movlw	low (STR_4+5)
   572  000B08  6E02               	movwf	putsXLCD@buffer^0,c
   573  000B0A  0E08               	movlw	high (STR_4+5)
   574  000B0C  6E03               	movwf	(putsXLCD@buffer+1)^0,c
   575  000B0E  EC0F  F007         	call	_putsXLCD	;wreg free
   576  000B12                     
   577                           ;main.c: 313:                 WriteCmdXLCD(0xC0);
   578  000B12  0EC0               	movlw	192
   579  000B14  ECD9  F007         	call	_WriteCmdXLCD
   580  000B18                     
   581                           ;main.c: 315:                 get_password(password);
   582  000B18  0E29               	movlw	low main@password
   583  000B1A  6E15               	movwf	get_password@password^0,c
   584  000B1C  0E00               	movlw	high main@password
   585  000B1E  6E16               	movwf	(get_password@password+1)^0,c
   586  000B20  EC4C  F006         	call	_get_password	;wreg free
   587  000B24                     
   588                           ;main.c: 317:                 if (check_password(password)) {
   589  000B24  0E29               	movlw	low main@password
   590  000B26  6E07               	movwf	check_password@input^0,c
   591  000B28  0E00               	movlw	high main@password
   592  000B2A  6E08               	movwf	(check_password@input+1)^0,c
   593  000B2C  ECF8  F007         	call	_check_password	;wreg free
   594  000B30  5007               	movf	?_check_password^0,w,c
   595  000B32  1008               	iorwf	(?_check_password+1)^0,w,c
   596  000B34  B4D8               	btfsc	status,2,c
   597  000B36  EF9F  F005         	goto	u811
   598  000B3A  EFA1  F005         	goto	u810
   599  000B3E                     u811:
   600  000B3E  EFB9  F005         	goto	l1952
   601  000B42                     u810:
   602  000B42                     
   603                           ;main.c: 318:                     clean_lcd();
   604  000B42  ECCA  F008         	call	_clean_lcd	;wreg free
   605                           
   606                           ;main.c: 319:                     WriteCmdXLCD(0x80);
   607  000B46  0E80               	movlw	128
   608  000B48  ECD9  F007         	call	_WriteCmdXLCD
   609  000B4C                     
   610                           ;main.c: 320:                     putsXLCD("Senha Correta");
   611  000B4C  0E4F               	movlw	low STR_8
   612  000B4E  6E02               	movwf	putsXLCD@buffer^0,c
   613  000B50  0E08               	movlw	high STR_8
   614  000B52  6E03               	movwf	(putsXLCD@buffer+1)^0,c
   615  000B54  EC0F  F007         	call	_putsXLCD	;wreg free
   616  000B58                     l1950:
   617                           
   618                           ;main.c: 321:                     _delay((unsigned long)((2000)*(20000000/4000.0)));
   619  000B58  0E33               	movlw	51
   620  000B5A  6E28               	movwf	(??_main+1)^0,c
   621  000B5C  0EBB               	movlw	187
   622  000B5E  6E27               	movwf	??_main^0,c
   623  000B60  0EE0               	movlw	224
   624  000B62                     u857:
   625  000B62  2EE8               	decfsz	wreg,f,c
   626  000B64  D7FE               	bra	u857
   627  000B66  2E27               	decfsz	??_main^0,f,c
   628  000B68  D7FC               	bra	u857
   629  000B6A  2E28               	decfsz	(??_main+1)^0,f,c
   630  000B6C  D7FA               	bra	u857
   631                           
   632                           ;main.c: 322:                 } else {
   633  000B6E  EFC6  F005         	goto	l1958
   634  000B72                     l1952:
   635                           
   636                           ;main.c: 323:                     clean_lcd();
   637  000B72  ECCA  F008         	call	_clean_lcd	;wreg free
   638                           
   639                           ;main.c: 324:                     WriteCmdXLCD(0x80);
   640  000B76  0E80               	movlw	128
   641  000B78  ECD9  F007         	call	_WriteCmdXLCD
   642  000B7C                     
   643                           ;main.c: 325:                     putsXLCD("Senha Invalida");
   644  000B7C  0E40               	movlw	low STR_9
   645  000B7E  6E02               	movwf	putsXLCD@buffer^0,c
   646  000B80  0E08               	movlw	high STR_9
   647  000B82  6E03               	movwf	(putsXLCD@buffer+1)^0,c
   648  000B84  EC0F  F007         	call	_putsXLCD	;wreg free
   649  000B88  EFAC  F005         	goto	l1950
   650  000B8C                     l1958:
   651                           
   652                           ;main.c: 329:             if (key == '3') {
   653  000B8C  0E33               	movlw	51
   654  000B8E  182E               	xorwf	main@key^0,w,c
   655  000B90  A4D8               	btfss	status,2,c
   656  000B92  EFCD  F005         	goto	u821
   657  000B96  EFCF  F005         	goto	u820
   658  000B9A                     u821:
   659  000B9A  EF3C  F005         	goto	l1918
   660  000B9E                     u820:
   661  000B9E                     
   662                           ;main.c: 330:                 set_password();
   663  000B9E  ECDD  F006         	call	_set_password	;wreg free
   664  000BA2  EF3C  F005         	goto	l1918
   665  000BA6  EF00  F000         	goto	start
   666  000BAA                     __end_of_main:
   667                           	callstack 0
   668                           
   669 ;; *************** function _show_initial *****************
   670 ;; Defined at:
   671 ;;		line 223 in file "main.c"
   672 ;; Parameters:    Size  Location     Type
   673 ;;		None
   674 ;; Auto vars:     Size  Location     Type
   675 ;;		None
   676 ;; Return value:  Size  Location     Type
   677 ;;                  1    wreg      void 
   678 ;; Registers used:
   679 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   680 ;; Tracked objects:
   681 ;;		On entry : 0/0
   682 ;;		On exit  : 0/0
   683 ;;		Unchanged: 0/0
   684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   685 ;;      Params:         0       0       0       0       0       0       0       0       0
   686 ;;      Locals:         0       0       0       0       0       0       0       0       0
   687 ;;      Temps:          0       0       0       0       0       0       0       0       0
   688 ;;      Totals:         0       0       0       0       0       0       0       0       0
   689 ;;Total ram usage:        0 bytes
   690 ;; Hardware stack levels used: 1
   691 ;; Hardware stack levels required when called: 3
   692 ;; This function calls:
   693 ;;		_WriteCmdXLCD
   694 ;;		_clean_lcd
   695 ;;		_putsXLCD
   696 ;; This function is called by:
   697 ;;		_main
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           	psect	text1
   702  00102E                     __ptext1:
   703                           	callstack 0
   704  00102E                     _show_initial:
   705                           	callstack 27
   706  00102E                     
   707                           ;main.c: 224:     clean_lcd();
   708  00102E  ECCA  F008         	call	_clean_lcd	;wreg free
   709                           
   710                           ;main.c: 225:     WriteCmdXLCD(0x80);
   711  001032  0E80               	movlw	128
   712  001034  ECD9  F007         	call	_WriteCmdXLCD
   713  001038                     
   714                           ;main.c: 226:     putsXLCD("1-Iniciar");
   715  001038  0E69               	movlw	low STR_1
   716  00103A  6E02               	movwf	putsXLCD@buffer^0,c
   717  00103C  0E08               	movlw	high STR_1
   718  00103E  6E03               	movwf	(putsXLCD@buffer+1)^0,c
   719  001040  EC0F  F007         	call	_putsXLCD	;wreg free
   720  001044                     
   721                           ;main.c: 227:     WriteCmdXLCD(0xC0);
   722  001044  0EC0               	movlw	192
   723  001046  ECD9  F007         	call	_WriteCmdXLCD
   724                           
   725                           ;main.c: 228:     putsXLCD("2-Configuracoes");
   726  00104A  0E21               	movlw	low STR_2
   727  00104C  6E02               	movwf	putsXLCD@buffer^0,c
   728  00104E  0E08               	movlw	high STR_2
   729  001050  6E03               	movwf	(putsXLCD@buffer+1)^0,c
   730  001052  EC0F  F007         	call	_putsXLCD	;wreg free
   731  001056                     
   732                           ;main.c: 229:     WriteCmdXLCD(0x94);
   733  001056  0E94               	movlw	148
   734  001058  ECD9  F007         	call	_WriteCmdXLCD
   735  00105C                     
   736                           ;main.c: 230:     putsXLCD("3-Alterar senha");
   737  00105C  0E11               	movlw	low STR_3
   738  00105E  6E02               	movwf	putsXLCD@buffer^0,c
   739  001060  0E08               	movlw	high STR_3
   740  001062  6E03               	movwf	(putsXLCD@buffer+1)^0,c
   741  001064  EC0F  F007         	call	_putsXLCD	;wreg free
   742  001068  0012               	return		;funcret
   743  00106A                     __end_of_show_initial:
   744                           	callstack 0
   745                           
   746 ;; *************** function _set_password *****************
   747 ;; Defined at:
   748 ;;		line 254 in file "main.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;		None
   751 ;; Auto vars:     Size  Location     Type
   752 ;;  new_password    5   33[COMRAM] unsigned char [5]
   753 ;; Return value:  Size  Location     Type
   754 ;;                  1    wreg      void 
   755 ;; Registers used:
   756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   762 ;;      Params:         0       0       0       0       0       0       0       0       0
   763 ;;      Locals:         5       0       0       0       0       0       0       0       0
   764 ;;      Temps:          2       0       0       0       0       0       0       0       0
   765 ;;      Totals:         7       0       0       0       0       0       0       0       0
   766 ;;Total ram usage:        7 bytes
   767 ;; Hardware stack levels used: 1
   768 ;; Hardware stack levels required when called: 3
   769 ;; This function calls:
   770 ;;		_EEPROM_write_user
   771 ;;		_WriteCmdXLCD
   772 ;;		_clean_lcd
   773 ;;		_get_password
   774 ;;		_putsXLCD
   775 ;; This function is called by:
   776 ;;		_main
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           	psect	text2
   781  000DBA                     __ptext2:
   782                           	callstack 0
   783  000DBA                     _set_password:
   784                           	callstack 27
   785  000DBA                     
   786                           ;main.c: 255:     unsigned char new_password[4 + 1];;main.c: 256:     clean_lcd();
   787  000DBA  ECCA  F008         	call	_clean_lcd	;wreg free
   788                           
   789                           ;main.c: 257:     WriteCmdXLCD(0x80);
   790  000DBE  0E80               	movlw	128
   791  000DC0  ECD9  F007         	call	_WriteCmdXLCD
   792  000DC4                     
   793                           ;main.c: 258:     putsXLCD("Nova Senha:");
   794  000DC4  0E5D               	movlw	low STR_4
   795  000DC6  6E02               	movwf	putsXLCD@buffer^0,c
   796  000DC8  0E08               	movlw	high STR_4
   797  000DCA  6E03               	movwf	(putsXLCD@buffer+1)^0,c
   798  000DCC  EC0F  F007         	call	_putsXLCD	;wreg free
   799  000DD0                     
   800                           ;main.c: 259:     WriteCmdXLCD(0xC0);
   801  000DD0  0EC0               	movlw	192
   802  000DD2  ECD9  F007         	call	_WriteCmdXLCD
   803  000DD6                     
   804                           ;main.c: 261:     get_password(new_password);
   805  000DD6  0E22               	movlw	low set_password@new_password
   806  000DD8  6E15               	movwf	get_password@password^0,c
   807  000DDA  0E00               	movlw	high set_password@new_password
   808  000DDC  6E16               	movwf	(get_password@password+1)^0,c
   809  000DDE  EC4C  F006         	call	_get_password	;wreg free
   810  000DE2                     
   811                           ;main.c: 263:     EEPROM_write_user(0x00, new_password);
   812  000DE2  0E22               	movlw	low set_password@new_password
   813  000DE4  6E03               	movwf	EEPROM_write_user@password^0,c
   814  000DE6  0E00               	movlw	high set_password@new_password
   815  000DE8  6E04               	movwf	(EEPROM_write_user@password+1)^0,c
   816  000DEA  0E00               	movlw	0
   817  000DEC  EC6D  F008         	call	_EEPROM_write_user
   818                           
   819                           ;main.c: 264:     clean_lcd();
   820  000DF0  ECCA  F008         	call	_clean_lcd	;wreg free
   821                           
   822                           ;main.c: 265:     WriteCmdXLCD(0x80);
   823  000DF4  0E80               	movlw	128
   824  000DF6  ECD9  F007         	call	_WriteCmdXLCD
   825  000DFA                     
   826                           ;main.c: 266:     putsXLCD("Senha Alterada");
   827  000DFA  0E31               	movlw	low STR_5
   828  000DFC  6E02               	movwf	putsXLCD@buffer^0,c
   829  000DFE  0E08               	movlw	high STR_5
   830  000E00  6E03               	movwf	(putsXLCD@buffer+1)^0,c
   831  000E02  EC0F  F007         	call	_putsXLCD	;wreg free
   832  000E06                     
   833                           ;main.c: 267:     _delay((unsigned long)((2000)*(20000000/4000.0)));
   834  000E06  0E33               	movlw	51
   835  000E08  6E21               	movwf	(??_set_password+1)^0,c
   836  000E0A  0EBB               	movlw	187
   837  000E0C  6E20               	movwf	??_set_password^0,c
   838  000E0E  0EE0               	movlw	224
   839  000E10                     u867:
   840  000E10  2EE8               	decfsz	wreg,f,c
   841  000E12  D7FE               	bra	u867
   842  000E14  2E20               	decfsz	??_set_password^0,f,c
   843  000E16  D7FC               	bra	u867
   844  000E18  2E21               	decfsz	(??_set_password+1)^0,f,c
   845  000E1A  D7FA               	bra	u867
   846  000E1C  0012               	return		;funcret
   847  000E1E                     __end_of_set_password:
   848                           	callstack 0
   849                           
   850 ;; *************** function _putsXLCD *****************
   851 ;; Defined at:
   852 ;;		line 510 in file "nxlcd.c"
   853 ;; Parameters:    Size  Location     Type
   854 ;;  buffer          2    1[COMRAM] PTR unsigned char 
   855 ;;		 -> STR_9(15), STR_8(14), STR_7(7), STR_6(7), 
   856 ;;		 -> STR_5(15), STR_4(12), STR_3(16), STR_2(16), 
   857 ;;		 -> STR_1(10), 
   858 ;; Auto vars:     Size  Location     Type
   859 ;;		None
   860 ;; Return value:  Size  Location     Type
   861 ;;                  1    wreg      void 
   862 ;; Registers used:
   863 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   869 ;;      Params:         2       0       0       0       0       0       0       0       0
   870 ;;      Locals:         0       0       0       0       0       0       0       0       0
   871 ;;      Temps:          0       0       0       0       0       0       0       0       0
   872 ;;      Totals:         2       0       0       0       0       0       0       0       0
   873 ;;Total ram usage:        2 bytes
   874 ;; Hardware stack levels used: 1
   875 ;; Hardware stack levels required when called: 2
   876 ;; This function calls:
   877 ;;		_BusyXLCD
   878 ;;		_WriteDataXLCD
   879 ;; This function is called by:
   880 ;;		_show_initial
   881 ;;		_set_password
   882 ;;		_main
   883 ;; This function uses a non-reentrant model
   884 ;;
   885                           
   886                           	psect	text3
   887  000E1E                     __ptext3:
   888                           	callstack 0
   889  000E1E                     _putsXLCD:
   890                           	callstack 27
   891  000E1E                     
   892                           ;nxlcd.c: 510: void putsXLCD(char *buffer);nxlcd.c: 511: {;nxlcd.c: 512:         while(*
      +                          buffer)
   893  000E1E  EF25  F007         	goto	l1698
   894  000E22                     l1692:
   895  000E22  EC34  F007         	call	_BusyXLCD	;wreg free
   896  000E26  0900               	iorlw	0
   897  000E28  A4D8               	btfss	status,2,c
   898  000E2A  EF19  F007         	goto	u601
   899  000E2E  EF1B  F007         	goto	u600
   900  000E32                     u601:
   901  000E32  EF11  F007         	goto	l1692
   902  000E36                     u600:
   903  000E36                     
   904                           ;nxlcd.c: 515:                 WriteDataXLCD(*buffer);
   905  000E36  C002  FFF6         	movff	putsXLCD@buffer,tblptrl
   906  000E3A  C003  FFF7         	movff	putsXLCD@buffer+1,tblptrh
   907  000E3E                     	if	0	;tblptru may be non-zero
   908  000E3E                     	endif
   909  000E3E                     	if	0	;tblptru may be non-zero
   910  000E3E                     	endif
   911  000E3E  0008               	tblrd		*
   912  000E40  50F5               	movf	tablat,w,c
   913  000E42  ECBA  F007         	call	_WriteDataXLCD
   914  000E46                     
   915                           ;nxlcd.c: 516:                 buffer++;
   916  000E46  4A02               	infsnz	putsXLCD@buffer^0,f,c
   917  000E48  2A03               	incf	(putsXLCD@buffer+1)^0,f,c
   918  000E4A                     l1698:
   919                           
   920                           ;nxlcd.c: 512:         while(*buffer)
   921  000E4A  C002  FFF6         	movff	putsXLCD@buffer,tblptrl
   922  000E4E  C003  FFF7         	movff	putsXLCD@buffer+1,tblptrh
   923  000E52                     	if	0	;tblptru may be non-zero
   924  000E52                     	endif
   925  000E52                     	if	0	;tblptru may be non-zero
   926  000E52                     	endif
   927  000E52  0008               	tblrd		*
   928  000E54  50F5               	movf	tablat,w,c
   929  000E56  0900               	iorlw	0
   930  000E58  A4D8               	btfss	status,2,c
   931  000E5A  EF31  F007         	goto	u611
   932  000E5E  EF33  F007         	goto	u610
   933  000E62                     u611:
   934  000E62  EF11  F007         	goto	l1692
   935  000E66                     u610:
   936  000E66  0012               	return		;funcret
   937  000E68                     __end_of_putsXLCD:
   938                           	callstack 0
   939                           
   940 ;; *************** function _get_password *****************
   941 ;; Defined at:
   942 ;;		line 233 in file "main.c"
   943 ;; Parameters:    Size  Location     Type
   944 ;;  password        2   20[COMRAM] PTR unsigned char 
   945 ;;		 -> main@password(5), set_password@new_password(5), 
   946 ;; Auto vars:     Size  Location     Type
   947 ;;  index           2   28[COMRAM] int 
   948 ;;  key             1   30[COMRAM] unsigned char 
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      void 
   951 ;; Registers used:
   952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   958 ;;      Params:         2       0       0       0       0       0       0       0       0
   959 ;;      Locals:         5       0       0       0       0       0       0       0       0
   960 ;;      Temps:          4       0       0       0       0       0       0       0       0
   961 ;;      Totals:        11       0       0       0       0       0       0       0       0
   962 ;;Total ram usage:       11 bytes
   963 ;; Hardware stack levels used: 1
   964 ;; Hardware stack levels required when called: 2
   965 ;; This function calls:
   966 ;;		_WriteDataXLCD
   967 ;;		_isdigit
   968 ;;		_read_keypad
   969 ;; This function is called by:
   970 ;;		_set_password
   971 ;;		_main
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           	psect	text4
   976  000C98                     __ptext4:
   977                           	callstack 0
   978  000C98                     _get_password:
   979                           	callstack 27
   980  000C98                     
   981                           ;main.c: 234:     char key;;main.c: 235:     int index = 0;
   982  000C98  0E00               	movlw	0
   983  000C9A  6E1E               	movwf	(get_password@index+1)^0,c
   984  000C9C  0E00               	movlw	0
   985  000C9E  6E1D               	movwf	get_password@index^0,c
   986                           
   987                           ;main.c: 236:     while (index < 4) {
   988  000CA0  EF90  F006         	goto	l1746
   989  000CA4                     l1730:
   990                           
   991                           ;main.c: 237:         _delay((unsigned long)((200)*(20000000/4000.0)));
   992  000CA4  0E06               	movlw	6
   993  000CA6  6E18               	movwf	(??_get_password+1)^0,c
   994  000CA8  0E13               	movlw	19
   995  000CAA  6E17               	movwf	??_get_password^0,c
   996  000CAC  0EAE               	movlw	174
   997  000CAE                     u877:
   998  000CAE  2EE8               	decfsz	wreg,f,c
   999  000CB0  D7FE               	bra	u877
  1000  000CB2  2E17               	decfsz	??_get_password^0,f,c
  1001  000CB4  D7FC               	bra	u877
  1002  000CB6  2E18               	decfsz	(??_get_password+1)^0,f,c
  1003  000CB8  D7FA               	bra	u877
  1004  000CBA                     
  1005                           ;main.c: 239:         if ((0 ? isdigit(key) : ((unsigned)(key)-'0') < 10)) {
  1006  000CBA  EC3E  F004         	call	_read_keypad	;wreg free
  1007  000CBE  6E1F               	movwf	get_password@key^0,c
  1008  000CC0  0ED0               	movlw	208
  1009  000CC2  6E17               	movwf	??_get_password^0,c
  1010  000CC4  0EFF               	movlw	255
  1011  000CC6  6E18               	movwf	(??_get_password+1)^0,c
  1012  000CC8  501F               	movf	get_password@key^0,w,c
  1013  000CCA  6E19               	movwf	(??_get_password+2)^0,c
  1014  000CCC  6A1A               	clrf	(??_get_password+3)^0,c
  1015  000CCE  5017               	movf	??_get_password^0,w,c
  1016  000CD0  2619               	addwf	(??_get_password+2)^0,f,c
  1017  000CD2  5018               	movf	(??_get_password+1)^0,w,c
  1018  000CD4  221A               	addwfc	(??_get_password+3)^0,f,c
  1019  000CD6  501A               	movf	(??_get_password+3)^0,w,c
  1020  000CD8  E10A               	bnz	u640
  1021  000CDA  0E0A               	movlw	10
  1022  000CDC  5C19               	subwf	(??_get_password+2)^0,w,c
  1023  000CDE  A0D8               	btfss	status,0,c
  1024  000CE0  EF74  F006         	goto	u641
  1025  000CE4  EF77  F006         	goto	u640
  1026  000CE8                     u641:
  1027  000CE8  0E01               	movlw	1
  1028  000CEA  EF78  F006         	goto	u650
  1029  000CEE                     u640:
  1030  000CEE  0E00               	movlw	0
  1031  000CF0                     u650:
  1032  000CF0  6E1B               	movwf	_get_password$469^0,c
  1033  000CF2  6A1C               	clrf	(_get_password$469+1)^0,c
  1034  000CF4  501B               	movf	_get_password$469^0,w,c
  1035  000CF6  101C               	iorwf	(_get_password$469+1)^0,w,c
  1036  000CF8  B4D8               	btfsc	status,2,c
  1037  000CFA  EF81  F006         	goto	u661
  1038  000CFE  EF83  F006         	goto	u660
  1039  000D02                     u661:
  1040  000D02  EF90  F006         	goto	l1746
  1041  000D06                     u660:
  1042  000D06                     
  1043                           ;main.c: 240:             password[index++] = key;
  1044  000D06  501D               	movf	get_password@index^0,w,c
  1045  000D08  2415               	addwf	get_password@password^0,w,c
  1046  000D0A  6ED9               	movwf	fsr2l,c
  1047  000D0C  501E               	movf	(get_password@index+1)^0,w,c
  1048  000D0E  2016               	addwfc	(get_password@password+1)^0,w,c
  1049  000D10  6EDA               	movwf	fsr2h,c
  1050  000D12  C01F  FFDF         	movff	get_password@key,indf2
  1051  000D16  4A1D               	infsnz	get_password@index^0,f,c
  1052  000D18  2A1E               	incf	(get_password@index+1)^0,f,c
  1053  000D1A                     
  1054                           ;main.c: 241:             WriteDataXLCD('*');
  1055  000D1A  0E2A               	movlw	42
  1056  000D1C  ECBA  F007         	call	_WriteDataXLCD
  1057  000D20                     l1746:
  1058                           
  1059                           ;main.c: 236:     while (index < 4) {
  1060  000D20  BE1E               	btfsc	(get_password@index+1)^0,7,c
  1061  000D22  EF9C  F006         	goto	u671
  1062  000D26  501E               	movf	(get_password@index+1)^0,w,c
  1063  000D28  E109               	bnz	u670
  1064  000D2A  0E04               	movlw	4
  1065  000D2C  5C1D               	subwf	get_password@index^0,w,c
  1066  000D2E  A0D8               	btfss	status,0,c
  1067  000D30  EF9C  F006         	goto	u671
  1068  000D34  EF9E  F006         	goto	u670
  1069  000D38                     u671:
  1070  000D38  EF52  F006         	goto	l1730
  1071  000D3C                     u670:
  1072  000D3C                     
  1073                           ;main.c: 245:     password[index] = '\0';
  1074  000D3C  501D               	movf	get_password@index^0,w,c
  1075  000D3E  2415               	addwf	get_password@password^0,w,c
  1076  000D40  6ED9               	movwf	fsr2l,c
  1077  000D42  501E               	movf	(get_password@index+1)^0,w,c
  1078  000D44  2016               	addwfc	(get_password@password+1)^0,w,c
  1079  000D46  6EDA               	movwf	fsr2h,c
  1080  000D48  0E00               	movlw	0
  1081  000D4A  6EDF               	movwf	indf2,c
  1082  000D4C  0012               	return		;funcret
  1083  000D4E                     __end_of_get_password:
  1084                           	callstack 0
  1085                           
  1086 ;; *************** function _read_keypad *****************
  1087 ;; Defined at:
  1088 ;;		line 162 in file "main.c"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;		None
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;  keys           16    2[COMRAM] const unsigned char [4][
  1093 ;;  col             2   18[COMRAM] int 
  1094 ;; Return value:  Size  Location     Type
  1095 ;;                  1    wreg      unsigned char 
  1096 ;; Registers used:
  1097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1098 ;; Tracked objects:
  1099 ;;		On entry : 0/0
  1100 ;;		On exit  : 0/0
  1101 ;;		Unchanged: 0/0
  1102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1103 ;;      Params:         0       0       0       0       0       0       0       0       0
  1104 ;;      Locals:        18       0       0       0       0       0       0       0       0
  1105 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1106 ;;      Totals:        20       0       0       0       0       0       0       0       0
  1107 ;;Total ram usage:       20 bytes
  1108 ;; Hardware stack levels used: 1
  1109 ;; This function calls:
  1110 ;;		Nothing
  1111 ;; This function is called by:
  1112 ;;		_get_password
  1113 ;;		_main
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           	psect	text5
  1118  00087C                     __ptext5:
  1119                           	callstack 0
  1120  00087C                     _read_keypad:
  1121                           	callstack 28
  1122  00087C                     
  1123                           ;main.c: 163:     const char keys[4][4] = {
  1124  00087C  0E01               	movlw	low read_keypad@F4231
  1125  00087E  6EF6               	movwf	tblptrl,c
  1126  000880                     	if	1	;There is more than 1 active tblptr byte
  1127  000880  0E08               	movlw	high read_keypad@F4231
  1128  000882  6EF7               	movwf	tblptrh,c
  1129  000884                     	endif
  1130  000884                     	if	0	;There are less than 3 active tblptr bytes
  1131  000884                     	endif
  1132  000884  EE20  F003         	lfsr	2,read_keypad@keys
  1133  000888  0E0F               	movlw	15
  1134  00088A                     u450:
  1135  00088A  0009               	tblrd		*+
  1136  00088C  CFF5 FFDE          	movff	tablat,postinc2
  1137  000890  06E8               	decf	wreg,f,c
  1138  000892  E2FB               	bc	u450
  1139  000894                     
  1140                           ;main.c: 169:     int col = 0;
  1141  000894  0E00               	movlw	0
  1142  000896  6E14               	movwf	(read_keypad@col+1)^0,c
  1143  000898  0E00               	movlw	0
  1144  00089A  6E13               	movwf	read_keypad@col^0,c
  1145  00089C  EF68  F004         	goto	l1590
  1146  0008A0                     l176:
  1147                           
  1148                           ;main.c: 173:                 PORTBbits.RB0 = 0;
  1149  0008A0  9081               	bcf	129,0,c	;volatile
  1150                           
  1151                           ;main.c: 174:                 PORTBbits.RB1 = 1;
  1152  0008A2  8281               	bsf	129,1,c	;volatile
  1153                           
  1154                           ;main.c: 175:                 PORTBbits.RB2 = 1;
  1155  0008A4  8481               	bsf	129,2,c	;volatile
  1156                           
  1157                           ;main.c: 176:                 PORTBbits.RB3 = 1;
  1158  0008A6  8681               	bsf	129,3,c	;volatile
  1159                           
  1160                           ;main.c: 177:                 break;
  1161  0008A8  EF86  F004         	goto	l177
  1162  0008AC                     l178:
  1163                           
  1164                           ;main.c: 179:                 PORTBbits.RB0 = 1;
  1165  0008AC  8081               	bsf	129,0,c	;volatile
  1166                           
  1167                           ;main.c: 180:                 PORTBbits.RB1 = 0;
  1168  0008AE  9281               	bcf	129,1,c	;volatile
  1169                           
  1170                           ;main.c: 181:                 PORTBbits.RB2 = 1;
  1171  0008B0  8481               	bsf	129,2,c	;volatile
  1172                           
  1173                           ;main.c: 182:                 PORTBbits.RB3 = 1;
  1174  0008B2  8681               	bsf	129,3,c	;volatile
  1175                           
  1176                           ;main.c: 183:                 break;
  1177  0008B4  EF86  F004         	goto	l177
  1178  0008B8                     l179:
  1179                           
  1180                           ;main.c: 185:                 PORTBbits.RB0 = 1;
  1181  0008B8  8081               	bsf	129,0,c	;volatile
  1182                           
  1183                           ;main.c: 186:                 PORTBbits.RB1 = 1;
  1184  0008BA  8281               	bsf	129,1,c	;volatile
  1185                           
  1186                           ;main.c: 187:                 PORTBbits.RB2 = 0;
  1187  0008BC  9481               	bcf	129,2,c	;volatile
  1188                           
  1189                           ;main.c: 188:                 PORTBbits.RB3 = 1;
  1190  0008BE  8681               	bsf	129,3,c	;volatile
  1191                           
  1192                           ;main.c: 189:                 break;
  1193  0008C0  EF86  F004         	goto	l177
  1194  0008C4                     l180:
  1195                           
  1196                           ;main.c: 191:                 PORTBbits.RB0 = 1;
  1197  0008C4  8081               	bsf	129,0,c	;volatile
  1198                           
  1199                           ;main.c: 192:                 PORTBbits.RB1 = 1;
  1200  0008C6  8281               	bsf	129,1,c	;volatile
  1201                           
  1202                           ;main.c: 193:                 PORTBbits.RB2 = 1;
  1203  0008C8  8481               	bsf	129,2,c	;volatile
  1204                           
  1205                           ;main.c: 194:                 PORTBbits.RB3 = 0;
  1206  0008CA  9681               	bcf	129,3,c	;volatile
  1207                           
  1208                           ;main.c: 195:                 break;
  1209  0008CC  EF86  F004         	goto	l177
  1210  0008D0                     l1590:
  1211  0008D0  C013  F001         	movff	read_keypad@col,??_read_keypad
  1212  0008D4  C014  F002         	movff	read_keypad@col+1,??_read_keypad+1
  1213                           
  1214                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1215                           ; Switch size 1, requested type "simple"
  1216                           ; Number of cases is 1, Range of values is 0 to 0
  1217                           ; switch strategies available:
  1218                           ; Name         Instructions Cycles
  1219                           ; simple_byte            4     3 (average)
  1220                           ;	Chosen strategy is simple_byte
  1221  0008D8  5002               	movf	(??_read_keypad+1)^0,w,c
  1222  0008DA  0A00               	xorlw	0	; case 0
  1223  0008DC  B4D8               	btfsc	status,2,c
  1224  0008DE  EF73  F004         	goto	l1966
  1225  0008E2  EF86  F004         	goto	l177
  1226  0008E6                     l1966:
  1227                           
  1228                           ; Switch size 1, requested type "simple"
  1229                           ; Number of cases is 4, Range of values is 0 to 3
  1230                           ; switch strategies available:
  1231                           ; Name         Instructions Cycles
  1232                           ; simple_byte           13     7 (average)
  1233                           ;	Chosen strategy is simple_byte
  1234  0008E6  5001               	movf	??_read_keypad^0,w,c
  1235  0008E8  0A00               	xorlw	0	; case 0
  1236  0008EA  B4D8               	btfsc	status,2,c
  1237  0008EC  EF50  F004         	goto	l176
  1238  0008F0  0A01               	xorlw	1	; case 1
  1239  0008F2  B4D8               	btfsc	status,2,c
  1240  0008F4  EF56  F004         	goto	l178
  1241  0008F8  0A03               	xorlw	3	; case 2
  1242  0008FA  B4D8               	btfsc	status,2,c
  1243  0008FC  EF5C  F004         	goto	l179
  1244  000900  0A01               	xorlw	1	; case 3
  1245  000902  B4D8               	btfsc	status,2,c
  1246  000904  EF62  F004         	goto	l180
  1247  000908  EF86  F004         	goto	l177
  1248  00090C                     l177:
  1249                           
  1250                           ;main.c: 197:         if (PORTBbits.RB4 == 0) {
  1251  00090C  B881               	btfsc	129,4,c	;volatile
  1252  00090E  EF8B  F004         	goto	u461
  1253  000912  EF8D  F004         	goto	u460
  1254  000916                     u461:
  1255  000916  EFAB  F004         	goto	l181
  1256  00091A                     u460:
  1257  00091A                     
  1258                           ;main.c: 198:             _delay((unsigned long)((100)*(20000000/4000.0)));
  1259  00091A  0E03               	movlw	3
  1260  00091C  6E02               	movwf	(??_read_keypad+1)^0,c
  1261  00091E  0E8A               	movlw	138
  1262  000920  6E01               	movwf	??_read_keypad^0,c
  1263  000922  0E56               	movlw	86
  1264  000924                     u887:
  1265  000924  2EE8               	decfsz	wreg,f,c
  1266  000926  D7FE               	bra	u887
  1267  000928  2E01               	decfsz	??_read_keypad^0,f,c
  1268  00092A  D7FC               	bra	u887
  1269  00092C  2E02               	decfsz	(??_read_keypad+1)^0,f,c
  1270  00092E  D7FA               	bra	u887
  1271  000930                     
  1272                           ;main.c: 199:             return keys[col][0];
  1273  000930  0E03               	movlw	low read_keypad@keys
  1274  000932  6E01               	movwf	??_read_keypad^0,c
  1275  000934  0E00               	movlw	high read_keypad@keys
  1276  000936  6E02               	movwf	(??_read_keypad+1)^0,c
  1277  000938  90D8               	bcf	status,0,c
  1278  00093A  3413               	rlcf	read_keypad@col^0,w,c
  1279  00093C  6ED9               	movwf	fsr2l,c
  1280  00093E  3414               	rlcf	(read_keypad@col+1)^0,w,c
  1281  000940  6EDA               	movwf	fsr2h,c
  1282  000942  90D8               	bcf	status,0,c
  1283  000944  36D9               	rlcf	fsr2l,f,c
  1284  000946  36DA               	rlcf	fsr2h,f,c
  1285  000948  5001               	movf	??_read_keypad^0,w,c
  1286  00094A  26D9               	addwf	fsr2l,f,c
  1287  00094C  5002               	movf	(??_read_keypad+1)^0,w,c
  1288  00094E  22DA               	addwfc	fsr2h,f,c
  1289  000950  50DF               	movf	indf2,w,c
  1290  000952  EF37  F005         	goto	l182
  1291  000956                     l181:
  1292                           
  1293                           ;main.c: 201:         if (PORTBbits.RB5 == 0) {
  1294  000956  BA81               	btfsc	129,5,c	;volatile
  1295  000958  EFB0  F004         	goto	u471
  1296  00095C  EFB2  F004         	goto	u470
  1297  000960                     u471:
  1298  000960  EFD4  F004         	goto	l183
  1299  000964                     u470:
  1300  000964                     
  1301                           ;main.c: 202:             _delay((unsigned long)((100)*(20000000/4000.0)));
  1302  000964  0E03               	movlw	3
  1303  000966  6E02               	movwf	(??_read_keypad+1)^0,c
  1304  000968  0E8A               	movlw	138
  1305  00096A  6E01               	movwf	??_read_keypad^0,c
  1306  00096C  0E56               	movlw	86
  1307  00096E                     u897:
  1308  00096E  2EE8               	decfsz	wreg,f,c
  1309  000970  D7FE               	bra	u897
  1310  000972  2E01               	decfsz	??_read_keypad^0,f,c
  1311  000974  D7FC               	bra	u897
  1312  000976  2E02               	decfsz	(??_read_keypad+1)^0,f,c
  1313  000978  D7FA               	bra	u897
  1314  00097A                     
  1315                           ;main.c: 203:             return keys[col][1];
  1316  00097A  C013  F001         	movff	read_keypad@col,??_read_keypad
  1317  00097E  C014  F002         	movff	read_keypad@col+1,??_read_keypad+1
  1318  000982  90D8               	bcf	status,0,c
  1319  000984  3601               	rlcf	??_read_keypad^0,f,c
  1320  000986  3602               	rlcf	(??_read_keypad+1)^0,f,c
  1321  000988  90D8               	bcf	status,0,c
  1322  00098A  3601               	rlcf	??_read_keypad^0,f,c
  1323  00098C  3602               	rlcf	(??_read_keypad+1)^0,f,c
  1324  00098E  0E01               	movlw	1
  1325  000990  2601               	addwf	??_read_keypad^0,f,c
  1326  000992  0E00               	movlw	0
  1327  000994  2202               	addwfc	(??_read_keypad+1)^0,f,c
  1328  000996  0E03               	movlw	low read_keypad@keys
  1329  000998  2401               	addwf	??_read_keypad^0,w,c
  1330  00099A  6ED9               	movwf	fsr2l,c
  1331  00099C  0E00               	movlw	high read_keypad@keys
  1332  00099E  2002               	addwfc	(??_read_keypad+1)^0,w,c
  1333  0009A0  6EDA               	movwf	fsr2h,c
  1334  0009A2  50DF               	movf	indf2,w,c
  1335  0009A4  EF37  F005         	goto	l182
  1336  0009A8                     l183:
  1337                           
  1338                           ;main.c: 205:         if (PORTBbits.RB6 == 0) {
  1339  0009A8  BC81               	btfsc	129,6,c	;volatile
  1340  0009AA  EFD9  F004         	goto	u481
  1341  0009AE  EFDB  F004         	goto	u480
  1342  0009B2                     u481:
  1343  0009B2  EFFD  F004         	goto	l184
  1344  0009B6                     u480:
  1345  0009B6                     
  1346                           ;main.c: 206:             _delay((unsigned long)((100)*(20000000/4000.0)));
  1347  0009B6  0E03               	movlw	3
  1348  0009B8  6E02               	movwf	(??_read_keypad+1)^0,c
  1349  0009BA  0E8A               	movlw	138
  1350  0009BC  6E01               	movwf	??_read_keypad^0,c
  1351  0009BE  0E56               	movlw	86
  1352  0009C0                     u907:
  1353  0009C0  2EE8               	decfsz	wreg,f,c
  1354  0009C2  D7FE               	bra	u907
  1355  0009C4  2E01               	decfsz	??_read_keypad^0,f,c
  1356  0009C6  D7FC               	bra	u907
  1357  0009C8  2E02               	decfsz	(??_read_keypad+1)^0,f,c
  1358  0009CA  D7FA               	bra	u907
  1359  0009CC                     
  1360                           ;main.c: 207:             return keys[col][2];
  1361  0009CC  C013  F001         	movff	read_keypad@col,??_read_keypad
  1362  0009D0  C014  F002         	movff	read_keypad@col+1,??_read_keypad+1
  1363  0009D4  90D8               	bcf	status,0,c
  1364  0009D6  3601               	rlcf	??_read_keypad^0,f,c
  1365  0009D8  3602               	rlcf	(??_read_keypad+1)^0,f,c
  1366  0009DA  90D8               	bcf	status,0,c
  1367  0009DC  3601               	rlcf	??_read_keypad^0,f,c
  1368  0009DE  3602               	rlcf	(??_read_keypad+1)^0,f,c
  1369  0009E0  0E02               	movlw	2
  1370  0009E2  2601               	addwf	??_read_keypad^0,f,c
  1371  0009E4  0E00               	movlw	0
  1372  0009E6  2202               	addwfc	(??_read_keypad+1)^0,f,c
  1373  0009E8  0E03               	movlw	low read_keypad@keys
  1374  0009EA  2401               	addwf	??_read_keypad^0,w,c
  1375  0009EC  6ED9               	movwf	fsr2l,c
  1376  0009EE  0E00               	movlw	high read_keypad@keys
  1377  0009F0  2002               	addwfc	(??_read_keypad+1)^0,w,c
  1378  0009F2  6EDA               	movwf	fsr2h,c
  1379  0009F4  50DF               	movf	indf2,w,c
  1380  0009F6  EF37  F005         	goto	l182
  1381  0009FA                     l184:
  1382                           
  1383                           ;main.c: 209:         if (PORTBbits.RB7 == 0) {
  1384  0009FA  BE81               	btfsc	129,7,c	;volatile
  1385  0009FC  EF02  F005         	goto	u491
  1386  000A00  EF04  F005         	goto	u490
  1387  000A04                     u491:
  1388  000A04  EF26  F005         	goto	l1616
  1389  000A08                     u490:
  1390  000A08                     
  1391                           ;main.c: 210:             _delay((unsigned long)((100)*(20000000/4000.0)));
  1392  000A08  0E03               	movlw	3
  1393  000A0A  6E02               	movwf	(??_read_keypad+1)^0,c
  1394  000A0C  0E8A               	movlw	138
  1395  000A0E  6E01               	movwf	??_read_keypad^0,c
  1396  000A10  0E56               	movlw	86
  1397  000A12                     u917:
  1398  000A12  2EE8               	decfsz	wreg,f,c
  1399  000A14  D7FE               	bra	u917
  1400  000A16  2E01               	decfsz	??_read_keypad^0,f,c
  1401  000A18  D7FC               	bra	u917
  1402  000A1A  2E02               	decfsz	(??_read_keypad+1)^0,f,c
  1403  000A1C  D7FA               	bra	u917
  1404  000A1E                     
  1405                           ;main.c: 211:             return keys[col][3];
  1406  000A1E  C013  F001         	movff	read_keypad@col,??_read_keypad
  1407  000A22  C014  F002         	movff	read_keypad@col+1,??_read_keypad+1
  1408  000A26  90D8               	bcf	status,0,c
  1409  000A28  3601               	rlcf	??_read_keypad^0,f,c
  1410  000A2A  3602               	rlcf	(??_read_keypad+1)^0,f,c
  1411  000A2C  90D8               	bcf	status,0,c
  1412  000A2E  3601               	rlcf	??_read_keypad^0,f,c
  1413  000A30  3602               	rlcf	(??_read_keypad+1)^0,f,c
  1414  000A32  0E03               	movlw	3
  1415  000A34  2601               	addwf	??_read_keypad^0,f,c
  1416  000A36  0E00               	movlw	0
  1417  000A38  2202               	addwfc	(??_read_keypad+1)^0,f,c
  1418  000A3A  0E03               	movlw	low read_keypad@keys
  1419  000A3C  2401               	addwf	??_read_keypad^0,w,c
  1420  000A3E  6ED9               	movwf	fsr2l,c
  1421  000A40  0E00               	movlw	high read_keypad@keys
  1422  000A42  2002               	addwfc	(??_read_keypad+1)^0,w,c
  1423  000A44  6EDA               	movwf	fsr2h,c
  1424  000A46  50DF               	movf	indf2,w,c
  1425  000A48  EF37  F005         	goto	l182
  1426  000A4C                     l1616:
  1427                           
  1428                           ;main.c: 213:         col++;
  1429  000A4C  4A13               	infsnz	read_keypad@col^0,f,c
  1430  000A4E  2A14               	incf	(read_keypad@col+1)^0,f,c
  1431  000A50                     
  1432                           ;main.c: 214:     } while (col < 4);
  1433  000A50  BE14               	btfsc	(read_keypad@col+1)^0,7,c
  1434  000A52  EF34  F005         	goto	u501
  1435  000A56  5014               	movf	(read_keypad@col+1)^0,w,c
  1436  000A58  E109               	bnz	u500
  1437  000A5A  0E04               	movlw	4
  1438  000A5C  5C13               	subwf	read_keypad@col^0,w,c
  1439  000A5E  A0D8               	btfss	status,0,c
  1440  000A60  EF34  F005         	goto	u501
  1441  000A64  EF36  F005         	goto	u500
  1442  000A68                     u501:
  1443  000A68  EF68  F004         	goto	l1590
  1444  000A6C                     u500:
  1445  000A6C                     
  1446                           ;main.c: 215:     return '\0';
  1447  000A6C  0E00               	movlw	0
  1448  000A6E                     l182:
  1449  000A6E  0012               	return		;funcret
  1450  000A70                     __end_of_read_keypad:
  1451                           	callstack 0
  1452                           
  1453 ;; *************** function _isdigit *****************
  1454 ;; Defined at:
  1455 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;  c               2    0[COMRAM] int 
  1458 ;; Auto vars:     Size  Location     Type
  1459 ;;		None
  1460 ;; Return value:  Size  Location     Type
  1461 ;;                  2    0[COMRAM] int 
  1462 ;; Registers used:
  1463 ;;		wreg, status,2, status,0
  1464 ;; Tracked objects:
  1465 ;;		On entry : 0/0
  1466 ;;		On exit  : 0/0
  1467 ;;		Unchanged: 0/0
  1468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1469 ;;      Params:         2       0       0       0       0       0       0       0       0
  1470 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1471 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1472 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1473 ;;Total ram usage:        6 bytes
  1474 ;; Hardware stack levels used: 1
  1475 ;; This function calls:
  1476 ;;		Nothing
  1477 ;; This function is called by:
  1478 ;;		_get_password
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           	psect	text6
  1483  00106A                     __ptext6:
  1484                           	callstack 0
  1485  00106A                     _isdigit:
  1486                           	callstack 28
  1487  00106A  0ED0               	movlw	208
  1488  00106C  6E03               	movwf	??_isdigit^0,c
  1489  00106E  0EFF               	movlw	255
  1490  001070  6E04               	movwf	(??_isdigit+1)^0,c
  1491  001072  C001  F005         	movff	isdigit@c,??_isdigit+2
  1492  001076  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  1493  00107A  5003               	movf	??_isdigit^0,w,c
  1494  00107C  2605               	addwf	(??_isdigit+2)^0,f,c
  1495  00107E  5004               	movf	(??_isdigit+1)^0,w,c
  1496  001080  2206               	addwfc	(??_isdigit+3)^0,f,c
  1497  001082  5006               	movf	(??_isdigit+3)^0,w,c
  1498  001084  E10A               	bnz	u510
  1499  001086  0E0A               	movlw	10
  1500  001088  5C05               	subwf	(??_isdigit+2)^0,w,c
  1501  00108A  A0D8               	btfss	status,0,c
  1502  00108C  EF4A  F008         	goto	u511
  1503  001090  EF4D  F008         	goto	u510
  1504  001094                     u511:
  1505  001094  0E01               	movlw	1
  1506  001096  EF4E  F008         	goto	u520
  1507  00109A                     u510:
  1508  00109A  0E00               	movlw	0
  1509  00109C                     u520:
  1510  00109C  6E01               	movwf	?_isdigit^0,c
  1511  00109E  6A02               	clrf	(?_isdigit+1)^0,c
  1512  0010A0  0012               	return		;funcret
  1513  0010A2                     __end_of_isdigit:
  1514                           	callstack 0
  1515                           
  1516 ;; *************** function _WriteDataXLCD *****************
  1517 ;; Defined at:
  1518 ;;		line 449 in file "nxlcd.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;  data            1    wreg     unsigned char 
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;  data            1    0[COMRAM] unsigned char 
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  1    wreg      void 
  1525 ;; Registers used:
  1526 ;;		wreg, status,2, status,0, cstack
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1532 ;;      Params:         0       0       0       0       0       0       0       0       0
  1533 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1534 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1535 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1536 ;;Total ram usage:        1 bytes
  1537 ;; Hardware stack levels used: 1
  1538 ;; Hardware stack levels required when called: 1
  1539 ;; This function calls:
  1540 ;;		_DelayFor18TCY
  1541 ;; This function is called by:
  1542 ;;		_putsXLCD
  1543 ;;		_get_password
  1544 ;;		_putrsXLCD
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           	psect	text7
  1549  000F74                     __ptext7:
  1550                           	callstack 0
  1551  000F74                     _WriteDataXLCD:
  1552                           	callstack 27
  1553                           
  1554                           ;incstack = 0
  1555                           ;WriteDataXLCD@data stored from wreg
  1556  000F74  6E01               	movwf	WriteDataXLCD@data^0,c
  1557  000F76                     
  1558                           ;nxlcd.c: 449: void WriteDataXLCD(char data);nxlcd.c: 450: {;nxlcd.c: 464:         TRISD
      +                           &= 0x0f;
  1559  000F76  0E0F               	movlw	15
  1560  000F78  1695               	andwf	149,f,c	;volatile
  1561                           
  1562                           ;nxlcd.c: 465:         PORTD &= 0x0f;
  1563  000F7A  0E0F               	movlw	15
  1564  000F7C  1683               	andwf	131,f,c	;volatile
  1565                           
  1566                           ;nxlcd.c: 466:         PORTD |= data&0xf0;
  1567  000F7E  5001               	movf	WriteDataXLCD@data^0,w,c
  1568  000F80  0BF0               	andlw	240
  1569  000F82  1283               	iorwf	131,f,c	;volatile
  1570  000F84                     
  1571                           ;nxlcd.c: 472:         LATEbits.LATE0 = 1;
  1572  000F84  808D               	bsf	141,0,c	;volatile
  1573  000F86                     
  1574                           ;nxlcd.c: 473:         LATEbits.LATE2 = 0;
  1575  000F86  948D               	bcf	141,2,c	;volatile
  1576  000F88                     
  1577                           ;nxlcd.c: 474:         DelayFor18TCY();
  1578  000F88  ECEF  F008         	call	_DelayFor18TCY	;wreg free
  1579  000F8C                     
  1580                           ;nxlcd.c: 475:         LATEbits.LATE1 = 1;
  1581  000F8C  828D               	bsf	141,1,c	;volatile
  1582  000F8E                     
  1583                           ;nxlcd.c: 476:         DelayFor18TCY();
  1584  000F8E  ECEF  F008         	call	_DelayFor18TCY	;wreg free
  1585  000F92                     
  1586                           ;nxlcd.c: 477:         LATEbits.LATE1 = 0;
  1587  000F92  928D               	bcf	141,1,c	;volatile
  1588                           
  1589                           ;nxlcd.c: 479:         PORTD &= 0x0f;
  1590  000F94  0E0F               	movlw	15
  1591  000F96  1683               	andwf	131,f,c	;volatile
  1592                           
  1593                           ;nxlcd.c: 480:         PORTD |= ((data<<4)&0xf0);
  1594  000F98  3801               	swapf	WriteDataXLCD@data^0,w,c
  1595  000F9A  0BF0               	andlw	240
  1596  000F9C  0BF0               	andlw	240
  1597  000F9E  1283               	iorwf	131,f,c	;volatile
  1598  000FA0                     
  1599                           ;nxlcd.c: 485:         DelayFor18TCY();
  1600  000FA0  ECEF  F008         	call	_DelayFor18TCY	;wreg free
  1601  000FA4                     
  1602                           ;nxlcd.c: 486:         LATEbits.LATE1 = 1;
  1603  000FA4  828D               	bsf	141,1,c	;volatile
  1604  000FA6                     
  1605                           ;nxlcd.c: 487:         DelayFor18TCY();
  1606  000FA6  ECEF  F008         	call	_DelayFor18TCY	;wreg free
  1607  000FAA                     
  1608                           ;nxlcd.c: 488:         LATEbits.LATE1 = 0;
  1609  000FAA  928D               	bcf	141,1,c	;volatile
  1610                           
  1611                           ;nxlcd.c: 490:         TRISD |= 0xf0;
  1612  000FAC  0EF0               	movlw	240
  1613  000FAE  1295               	iorwf	149,f,c	;volatile
  1614  000FB0  0012               	return		;funcret
  1615  000FB2                     __end_of_WriteDataXLCD:
  1616                           	callstack 0
  1617                           
  1618 ;; *************** function _clean_lcd *****************
  1619 ;; Defined at:
  1620 ;;		line 218 in file "main.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;		None
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;		None
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  1    wreg      void 
  1627 ;; Registers used:
  1628 ;;		wreg, status,2, status,0, cstack
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1634 ;;      Params:         0       0       0       0       0       0       0       0       0
  1635 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1636 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1637 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1638 ;;Total ram usage:        1 bytes
  1639 ;; Hardware stack levels used: 1
  1640 ;; Hardware stack levels required when called: 2
  1641 ;; This function calls:
  1642 ;;		_WriteCmdXLCD
  1643 ;; This function is called by:
  1644 ;;		_show_initial
  1645 ;;		_set_password
  1646 ;;		_main
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           	psect	text8
  1651  001194                     __ptext8:
  1652                           	callstack 0
  1653  001194                     _clean_lcd:
  1654                           	callstack 27
  1655  001194                     
  1656                           ;main.c: 219:     WriteCmdXLCD(0x01);
  1657  001194  0E01               	movlw	1
  1658  001196  ECD9  F007         	call	_WriteCmdXLCD
  1659  00119A                     
  1660                           ;main.c: 220:     _delay((unsigned long)((5)*(20000000/4000.0)));
  1661  00119A  0E21               	movlw	33
  1662  00119C  6E02               	movwf	??_clean_lcd^0,c
  1663  00119E  0E76               	movlw	118
  1664  0011A0                     u927:
  1665  0011A0  2EE8               	decfsz	wreg,f,c
  1666  0011A2  D7FE               	bra	u927
  1667  0011A4  2E02               	decfsz	??_clean_lcd^0,f,c
  1668  0011A6  D7FC               	bra	u927
  1669  0011A8  D000               	nop2	
  1670  0011AA  0012               	return		;funcret
  1671  0011AC                     __end_of_clean_lcd:
  1672                           	callstack 0
  1673                           
  1674 ;; *************** function _initSystem *****************
  1675 ;; Defined at:
  1676 ;;		line 98 in file "main.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;		None
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;		None
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  1    wreg      void 
  1683 ;; Registers used:
  1684 ;;		wreg, status,2, status,0, cstack
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1690 ;;      Params:         0       0       0       0       0       0       0       0       0
  1691 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1692 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1693 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1694 ;;Total ram usage:        0 bytes
  1695 ;; Hardware stack levels used: 1
  1696 ;; Hardware stack levels required when called: 3
  1697 ;; This function calls:
  1698 ;;		_OpenXLCD
  1699 ;; This function is called by:
  1700 ;;		_main
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704                           	psect	text9
  1705  00113C                     __ptext9:
  1706                           	callstack 0
  1707  00113C                     _initSystem:
  1708                           	callstack 27
  1709  00113C                     
  1710                           ;main.c: 99:     TRISCbits.TRISC0 = 0;
  1711  00113C  9094               	bcf	148,0,c	;volatile
  1712                           
  1713                           ;main.c: 100:     TRISCbits.TRISC1 = 0;
  1714  00113E  9294               	bcf	148,1,c	;volatile
  1715                           
  1716                           ;main.c: 101:     TRISCbits.TRISC2 = 0;
  1717  001140  9494               	bcf	148,2,c	;volatile
  1718                           
  1719                           ;main.c: 103:     TRISA = 0xFF;
  1720  001142  6892               	setf	146,c	;volatile
  1721  001144                     
  1722                           ;main.c: 104:     TRISB = 0xF0;
  1723  001144  0EF0               	movlw	240
  1724  001146  6E93               	movwf	147,c	;volatile
  1725                           
  1726                           ;main.c: 105:     TRISD = 0xF0;
  1727  001148  0EF0               	movlw	240
  1728  00114A  6E95               	movwf	149,c	;volatile
  1729  00114C                     
  1730                           ;main.c: 107:     RBPU = 0;
  1731  00114C  9EF1               	bcf	4081,7,c	;volatile
  1732                           
  1733                           ;main.c: 109:     ADCON0 = 0b00001111;
  1734  00114E  0E0F               	movlw	15
  1735  001150  6EC2               	movwf	194,c	;volatile
  1736                           
  1737                           ;main.c: 110:     ADCON1 = 0b00001101;
  1738  001152  0E0D               	movlw	13
  1739  001154  6EC1               	movwf	193,c	;volatile
  1740                           
  1741                           ;main.c: 111:     ADCON2 = 0b10010101;
  1742  001156  0E95               	movlw	149
  1743  001158  6EC0               	movwf	192,c	;volatile
  1744  00115A                     
  1745                           ;main.c: 113:     PORTDbits.RD0 = 1;
  1746  00115A  8083               	bsf	131,0,c	;volatile
  1747  00115C                     
  1748                           ;main.c: 114:     PORTDbits.RD1 = 1;
  1749  00115C  8283               	bsf	131,1,c	;volatile
  1750  00115E                     
  1751                           ;main.c: 115:     PORTDbits.RD2 = 1;
  1752  00115E  8483               	bsf	131,2,c	;volatile
  1753  001160                     
  1754                           ;main.c: 116:     PORTDbits.RD3 = 1;
  1755  001160  8683               	bsf	131,3,c	;volatile
  1756  001162                     
  1757                           ;main.c: 118:     OpenXLCD(0b00101100 & 0b00111000);
  1758  001162  0E28               	movlw	40
  1759  001164  ECD5  F005         	call	_OpenXLCD
  1760  001168  0012               	return		;funcret
  1761  00116A                     __end_of_initSystem:
  1762                           	callstack 0
  1763                           
  1764 ;; *************** function _OpenXLCD *****************
  1765 ;; Defined at:
  1766 ;;		line 41 in file "nxlcd.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;  lcdtype         1    wreg     unsigned char 
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;  lcdtype         1    1[COMRAM] unsigned char 
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      void 
  1773 ;; Registers used:
  1774 ;;		wreg, status,2, status,0, cstack
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1780 ;;      Params:         0       0       0       0       0       0       0       0       0
  1781 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1782 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1783 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1784 ;;Total ram usage:        1 bytes
  1785 ;; Hardware stack levels used: 1
  1786 ;; Hardware stack levels required when called: 2
  1787 ;; This function calls:
  1788 ;;		_BusyXLCD
  1789 ;;		_DelayPORXLCD
  1790 ;;		_DelayXLCD
  1791 ;;		_SetDDRamAddr
  1792 ;;		_WriteCmdXLCD
  1793 ;; This function is called by:
  1794 ;;		_initSystem
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           	psect	text10
  1799  000BAA                     __ptext10:
  1800                           	callstack 0
  1801  000BAA                     _OpenXLCD:
  1802                           	callstack 27
  1803                           
  1804                           ;incstack = 0
  1805                           ;OpenXLCD@lcdtype stored from wreg
  1806  000BAA  6E02               	movwf	OpenXLCD@lcdtype^0,c
  1807  000BAC                     
  1808                           ;nxlcd.c: 41: void OpenXLCD(unsigned char lcdtype);nxlcd.c: 42: {;nxlcd.c: 50:         P
      +                          ORTD &= 0x0f;
  1809  000BAC  0E0F               	movlw	15
  1810  000BAE  1683               	andwf	131,f,c	;volatile
  1811                           
  1812                           ;nxlcd.c: 51:         TRISD &= 0x0F;
  1813  000BB0  0E0F               	movlw	15
  1814  000BB2  1695               	andwf	149,f,c	;volatile
  1815  000BB4                     
  1816                           ;nxlcd.c: 57:         TRISEbits.TRISE2 = 0;
  1817  000BB4  9496               	bcf	150,2,c	;volatile
  1818  000BB6                     
  1819                           ;nxlcd.c: 58:         TRISEbits.TRISE0 = 0;
  1820  000BB6  9096               	bcf	150,0,c	;volatile
  1821  000BB8                     
  1822                           ;nxlcd.c: 59:         TRISEbits.TRISE1 = 0;
  1823  000BB8  9296               	bcf	150,1,c	;volatile
  1824  000BBA                     
  1825                           ;nxlcd.c: 60:         LATEbits.LATE2 = 0;
  1826  000BBA  948D               	bcf	141,2,c	;volatile
  1827  000BBC                     
  1828                           ;nxlcd.c: 61:         LATEbits.LATE0 = 0;
  1829  000BBC  908D               	bcf	141,0,c	;volatile
  1830  000BBE                     
  1831                           ;nxlcd.c: 62:         LATEbits.LATE1 = 0;
  1832  000BBE  928D               	bcf	141,1,c	;volatile
  1833  000BC0                     
  1834                           ;nxlcd.c: 65:         DelayPORXLCD();
  1835  000BC0  ECDF  F008         	call	_DelayPORXLCD	;wreg free
  1836  000BC4                     
  1837                           ;nxlcd.c: 67:    WriteCmdXLCD(0x30);
  1838  000BC4  0E30               	movlw	48
  1839  000BC6  ECD9  F007         	call	_WriteCmdXLCD
  1840  000BCA                     
  1841                           ;nxlcd.c: 68:    DelayXLCD();
  1842  000BCA  ECD6  F008         	call	_DelayXLCD	;wreg free
  1843  000BCE                     
  1844                           ;nxlcd.c: 69:    DelayXLCD();
  1845  000BCE  ECD6  F008         	call	_DelayXLCD	;wreg free
  1846  000BD2                     
  1847                           ;nxlcd.c: 70:    WriteCmdXLCD(0x30);
  1848  000BD2  0E30               	movlw	48
  1849  000BD4  ECD9  F007         	call	_WriteCmdXLCD
  1850  000BD8                     
  1851                           ;nxlcd.c: 71:    DelayXLCD();
  1852  000BD8  ECD6  F008         	call	_DelayXLCD	;wreg free
  1853  000BDC                     
  1854                           ;nxlcd.c: 72:    DelayXLCD();
  1855  000BDC  ECD6  F008         	call	_DelayXLCD	;wreg free
  1856  000BE0                     
  1857                           ;nxlcd.c: 73:    WriteCmdXLCD(0x32);
  1858  000BE0  0E32               	movlw	50
  1859  000BE2  ECD9  F007         	call	_WriteCmdXLCD
  1860  000BE6                     l1662:
  1861  000BE6  EC34  F007         	call	_BusyXLCD	;wreg free
  1862  000BEA  0900               	iorlw	0
  1863  000BEC  A4D8               	btfss	status,2,c
  1864  000BEE  EFFB  F005         	goto	u531
  1865  000BF2  EFFD  F005         	goto	u530
  1866  000BF6                     u531:
  1867  000BF6  EFF3  F005         	goto	l1662
  1868  000BFA                     u530:
  1869  000BFA                     l1664:
  1870  000BFA  EC34  F007         	call	_BusyXLCD	;wreg free
  1871  000BFE  0900               	iorlw	0
  1872  000C00  A4D8               	btfss	status,2,c
  1873  000C02  EF05  F006         	goto	u541
  1874  000C06  EF07  F006         	goto	u540
  1875  000C0A                     u541:
  1876  000C0A  EFFD  F005         	goto	l1664
  1877  000C0E                     u540:
  1878  000C0E                     
  1879                           ;nxlcd.c: 80:         WriteCmdXLCD(lcdtype);
  1880  000C0E  5002               	movf	OpenXLCD@lcdtype^0,w,c
  1881  000C10  ECD9  F007         	call	_WriteCmdXLCD
  1882  000C14                     l1668:
  1883  000C14  EC34  F007         	call	_BusyXLCD	;wreg free
  1884  000C18  0900               	iorlw	0
  1885  000C1A  A4D8               	btfss	status,2,c
  1886  000C1C  EF12  F006         	goto	u551
  1887  000C20  EF14  F006         	goto	u550
  1888  000C24                     u551:
  1889  000C24  EF0A  F006         	goto	l1668
  1890  000C28                     u550:
  1891  000C28                     
  1892                           ;nxlcd.c: 84:         WriteCmdXLCD(0b00001011&0b00001101&0b00001110);
  1893  000C28  0E08               	movlw	8
  1894  000C2A  ECD9  F007         	call	_WriteCmdXLCD
  1895  000C2E                     l1672:
  1896  000C2E  EC34  F007         	call	_BusyXLCD	;wreg free
  1897  000C32  0900               	iorlw	0
  1898  000C34  A4D8               	btfss	status,2,c
  1899  000C36  EF1F  F006         	goto	u561
  1900  000C3A  EF21  F006         	goto	u560
  1901  000C3E                     u561:
  1902  000C3E  EF17  F006         	goto	l1672
  1903  000C42                     u560:
  1904  000C42                     
  1905                           ;nxlcd.c: 86:         WriteCmdXLCD(0b00001111&0b00001111&0b00001111);
  1906  000C42  0E0F               	movlw	15
  1907  000C44  ECD9  F007         	call	_WriteCmdXLCD
  1908  000C48                     l1676:
  1909  000C48  EC34  F007         	call	_BusyXLCD	;wreg free
  1910  000C4C  0900               	iorlw	0
  1911  000C4E  A4D8               	btfss	status,2,c
  1912  000C50  EF2C  F006         	goto	u571
  1913  000C54  EF2E  F006         	goto	u570
  1914  000C58                     u571:
  1915  000C58  EF24  F006         	goto	l1676
  1916  000C5C                     u570:
  1917  000C5C                     
  1918                           ;nxlcd.c: 90:         WriteCmdXLCD(0x01);
  1919  000C5C  0E01               	movlw	1
  1920  000C5E  ECD9  F007         	call	_WriteCmdXLCD
  1921  000C62                     l1680:
  1922  000C62  EC34  F007         	call	_BusyXLCD	;wreg free
  1923  000C66  0900               	iorlw	0
  1924  000C68  A4D8               	btfss	status,2,c
  1925  000C6A  EF39  F006         	goto	u581
  1926  000C6E  EF3B  F006         	goto	u580
  1927  000C72                     u581:
  1928  000C72  EF31  F006         	goto	l1680
  1929  000C76                     u580:
  1930  000C76                     
  1931                           ;nxlcd.c: 94:         WriteCmdXLCD(0b00000100);
  1932  000C76  0E04               	movlw	4
  1933  000C78  ECD9  F007         	call	_WriteCmdXLCD
  1934  000C7C                     l1684:
  1935  000C7C  EC34  F007         	call	_BusyXLCD	;wreg free
  1936  000C80  0900               	iorlw	0
  1937  000C82  A4D8               	btfss	status,2,c
  1938  000C84  EF46  F006         	goto	u591
  1939  000C88  EF48  F006         	goto	u590
  1940  000C8C                     u591:
  1941  000C8C  EF3E  F006         	goto	l1684
  1942  000C90                     u590:
  1943  000C90                     
  1944                           ;nxlcd.c: 98:         SetDDRamAddr(0x80);
  1945  000C90  0E80               	movlw	128
  1946  000C92  EC7A  F007         	call	_SetDDRamAddr
  1947  000C96  0012               	return		;funcret
  1948  000C98                     __end_of_OpenXLCD:
  1949                           	callstack 0
  1950                           
  1951 ;; *************** function _WriteCmdXLCD *****************
  1952 ;; Defined at:
  1953 ;;		line 388 in file "nxlcd.c"
  1954 ;; Parameters:    Size  Location     Type
  1955 ;;  cmd             1    wreg     unsigned char 
  1956 ;; Auto vars:     Size  Location     Type
  1957 ;;  cmd             1    0[COMRAM] unsigned char 
  1958 ;; Return value:  Size  Location     Type
  1959 ;;                  1    wreg      void 
  1960 ;; Registers used:
  1961 ;;		wreg, status,2, status,0, cstack
  1962 ;; Tracked objects:
  1963 ;;		On entry : 0/0
  1964 ;;		On exit  : 0/0
  1965 ;;		Unchanged: 0/0
  1966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1967 ;;      Params:         0       0       0       0       0       0       0       0       0
  1968 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1969 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1970 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1971 ;;Total ram usage:        1 bytes
  1972 ;; Hardware stack levels used: 1
  1973 ;; Hardware stack levels required when called: 1
  1974 ;; This function calls:
  1975 ;;		_DelayFor18TCY
  1976 ;; This function is called by:
  1977 ;;		_OpenXLCD
  1978 ;;		_clean_lcd
  1979 ;;		_show_initial
  1980 ;;		_set_password
  1981 ;;		_main
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985                           	psect	text11
  1986  000FB2                     __ptext11:
  1987                           	callstack 0
  1988  000FB2                     _WriteCmdXLCD:
  1989                           	callstack 27
  1990                           
  1991                           ;incstack = 0
  1992                           ;WriteCmdXLCD@cmd stored from wreg
  1993  000FB2  6E01               	movwf	WriteCmdXLCD@cmd^0,c
  1994  000FB4                     
  1995                           ;nxlcd.c: 388: void WriteCmdXLCD(unsigned char cmd);nxlcd.c: 389: {;nxlcd.c: 403:       
      +                            TRISD &= 0x0f;
  1996  000FB4  0E0F               	movlw	15
  1997  000FB6  1695               	andwf	149,f,c	;volatile
  1998                           
  1999                           ;nxlcd.c: 404:         PORTD &= 0x0f;
  2000  000FB8  0E0F               	movlw	15
  2001  000FBA  1683               	andwf	131,f,c	;volatile
  2002                           
  2003                           ;nxlcd.c: 405:         PORTD |= cmd&0xf0;
  2004  000FBC  5001               	movf	WriteCmdXLCD@cmd^0,w,c
  2005  000FBE  0BF0               	andlw	240
  2006  000FC0  1283               	iorwf	131,f,c	;volatile
  2007  000FC2                     
  2008                           ;nxlcd.c: 411:         LATEbits.LATE2 = 0;
  2009  000FC2  948D               	bcf	141,2,c	;volatile
  2010  000FC4                     
  2011                           ;nxlcd.c: 412:         LATEbits.LATE0 = 0;
  2012  000FC4  908D               	bcf	141,0,c	;volatile
  2013  000FC6                     
  2014                           ;nxlcd.c: 413:         DelayFor18TCY();
  2015  000FC6  ECEF  F008         	call	_DelayFor18TCY	;wreg free
  2016  000FCA                     
  2017                           ;nxlcd.c: 414:         LATEbits.LATE1 = 1;
  2018  000FCA  828D               	bsf	141,1,c	;volatile
  2019  000FCC                     
  2020                           ;nxlcd.c: 415:         DelayFor18TCY();
  2021  000FCC  ECEF  F008         	call	_DelayFor18TCY	;wreg free
  2022  000FD0                     
  2023                           ;nxlcd.c: 416:         LATEbits.LATE1 = 0;
  2024  000FD0  928D               	bcf	141,1,c	;volatile
  2025                           
  2026                           ;nxlcd.c: 418:         PORTD &= 0x0f;
  2027  000FD2  0E0F               	movlw	15
  2028  000FD4  1683               	andwf	131,f,c	;volatile
  2029                           
  2030                           ;nxlcd.c: 419:         PORTD |= (cmd<<4)&0xf0;
  2031  000FD6  3801               	swapf	WriteCmdXLCD@cmd^0,w,c
  2032  000FD8  0BF0               	andlw	240
  2033  000FDA  0BF0               	andlw	240
  2034  000FDC  1283               	iorwf	131,f,c	;volatile
  2035  000FDE                     
  2036                           ;nxlcd.c: 424:         DelayFor18TCY();
  2037  000FDE  ECEF  F008         	call	_DelayFor18TCY	;wreg free
  2038  000FE2                     
  2039                           ;nxlcd.c: 425:         LATEbits.LATE1 = 1;
  2040  000FE2  828D               	bsf	141,1,c	;volatile
  2041  000FE4                     
  2042                           ;nxlcd.c: 426:         DelayFor18TCY();
  2043  000FE4  ECEF  F008         	call	_DelayFor18TCY	;wreg free
  2044  000FE8                     
  2045                           ;nxlcd.c: 427:         LATEbits.LATE1 = 0;
  2046  000FE8  928D               	bcf	141,1,c	;volatile
  2047                           
  2048                           ;nxlcd.c: 429:         TRISD |= 0xf0;
  2049  000FEA  0EF0               	movlw	240
  2050  000FEC  1295               	iorwf	149,f,c	;volatile
  2051  000FEE  0012               	return		;funcret
  2052  000FF0                     __end_of_WriteCmdXLCD:
  2053                           	callstack 0
  2054                           
  2055 ;; *************** function _SetDDRamAddr *****************
  2056 ;; Defined at:
  2057 ;;		line 171 in file "nxlcd.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;  DDaddr          1    wreg     unsigned char 
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;  DDaddr          1    0[COMRAM] unsigned char 
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  1    wreg      void 
  2064 ;; Registers used:
  2065 ;;		wreg, status,2, status,0, cstack
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2071 ;;      Params:         0       0       0       0       0       0       0       0       0
  2072 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2073 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2074 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2075 ;;Total ram usage:        1 bytes
  2076 ;; Hardware stack levels used: 1
  2077 ;; Hardware stack levels required when called: 1
  2078 ;; This function calls:
  2079 ;;		_DelayFor18TCY
  2080 ;; This function is called by:
  2081 ;;		_OpenXLCD
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           	psect	text12
  2086  000EF4                     __ptext12:
  2087                           	callstack 0
  2088  000EF4                     _SetDDRamAddr:
  2089                           	callstack 27
  2090                           
  2091                           ;incstack = 0
  2092                           ;SetDDRamAddr@DDaddr stored from wreg
  2093  000EF4  6E01               	movwf	SetDDRamAddr@DDaddr^0,c
  2094  000EF6                     
  2095                           ;nxlcd.c: 171: void SetDDRamAddr(unsigned char DDaddr);nxlcd.c: 172: {;nxlcd.c: 186:    
      +                               TRISD &= 0x0f;
  2096  000EF6  0E0F               	movlw	15
  2097  000EF8  1695               	andwf	149,f,c	;volatile
  2098                           
  2099                           ;nxlcd.c: 187:         PORTD &= 0x0f;
  2100  000EFA  0E0F               	movlw	15
  2101  000EFC  1683               	andwf	131,f,c	;volatile
  2102                           
  2103                           ;nxlcd.c: 188:         PORTD |= ((DDaddr | 0b10000000) & 0xf0);
  2104  000EFE  5001               	movf	SetDDRamAddr@DDaddr^0,w,c
  2105  000F00  0980               	iorlw	128
  2106  000F02  0BF0               	andlw	240
  2107  000F04  1283               	iorwf	131,f,c	;volatile
  2108  000F06                     
  2109                           ;nxlcd.c: 194:         LATEbits.LATE2 = 0;
  2110  000F06  948D               	bcf	141,2,c	;volatile
  2111  000F08                     
  2112                           ;nxlcd.c: 195:         LATEbits.LATE0 = 0;
  2113  000F08  908D               	bcf	141,0,c	;volatile
  2114  000F0A                     
  2115                           ;nxlcd.c: 196:         DelayFor18TCY();
  2116  000F0A  ECEF  F008         	call	_DelayFor18TCY	;wreg free
  2117  000F0E                     
  2118                           ;nxlcd.c: 197:         LATEbits.LATE1 = 1;
  2119  000F0E  828D               	bsf	141,1,c	;volatile
  2120  000F10                     
  2121                           ;nxlcd.c: 198:         DelayFor18TCY();
  2122  000F10  ECEF  F008         	call	_DelayFor18TCY	;wreg free
  2123  000F14                     
  2124                           ;nxlcd.c: 199:         LATEbits.LATE1 = 0;
  2125  000F14  928D               	bcf	141,1,c	;volatile
  2126                           
  2127                           ;nxlcd.c: 201:         PORTD &= 0x0f;
  2128  000F16  0E0F               	movlw	15
  2129  000F18  1683               	andwf	131,f,c	;volatile
  2130                           
  2131                           ;nxlcd.c: 202:         PORTD |= ((DDaddr<<4)&0xf0);
  2132  000F1A  3801               	swapf	SetDDRamAddr@DDaddr^0,w,c
  2133  000F1C  0BF0               	andlw	240
  2134  000F1E  0BF0               	andlw	240
  2135  000F20  1283               	iorwf	131,f,c	;volatile
  2136  000F22                     
  2137                           ;nxlcd.c: 207:         DelayFor18TCY();
  2138  000F22  ECEF  F008         	call	_DelayFor18TCY	;wreg free
  2139  000F26                     
  2140                           ;nxlcd.c: 208:         LATEbits.LATE1 = 1;
  2141  000F26  828D               	bsf	141,1,c	;volatile
  2142  000F28                     
  2143                           ;nxlcd.c: 209:         DelayFor18TCY();
  2144  000F28  ECEF  F008         	call	_DelayFor18TCY	;wreg free
  2145  000F2C                     
  2146                           ;nxlcd.c: 210:         LATEbits.LATE1 = 0;
  2147  000F2C  928D               	bcf	141,1,c	;volatile
  2148                           
  2149                           ;nxlcd.c: 212:         TRISD |= 0xf0;
  2150  000F2E  0EF0               	movlw	240
  2151  000F30  1295               	iorwf	149,f,c	;volatile
  2152  000F32  0012               	return		;funcret
  2153  000F34                     __end_of_SetDDRamAddr:
  2154                           	callstack 0
  2155                           
  2156 ;; *************** function _DelayXLCD *****************
  2157 ;; Defined at:
  2158 ;;		line 22 in file "nxlcd.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;		None
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;		None
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  1    wreg      void 
  2165 ;; Registers used:
  2166 ;;		wreg
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2172 ;;      Params:         0       0       0       0       0       0       0       0       0
  2173 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2174 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2175 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2176 ;;Total ram usage:        1 bytes
  2177 ;; Hardware stack levels used: 1
  2178 ;; This function calls:
  2179 ;;		Nothing
  2180 ;; This function is called by:
  2181 ;;		_OpenXLCD
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           	psect	text13
  2186  0011AC                     __ptext13:
  2187                           	callstack 0
  2188  0011AC                     _DelayXLCD:
  2189                           	callstack 28
  2190  0011AC                     
  2191                           ;nxlcd.c: 24:     _delay((unsigned long)((5)*(20000000/4000.0)));
  2192  0011AC  0E21               	movlw	33
  2193  0011AE  6E01               	movwf	??_DelayXLCD^0,c
  2194  0011B0  0E76               	movlw	118
  2195  0011B2                     u937:
  2196  0011B2  2EE8               	decfsz	wreg,f,c
  2197  0011B4  D7FE               	bra	u937
  2198  0011B6  2E01               	decfsz	??_DelayXLCD^0,f,c
  2199  0011B8  D7FC               	bra	u937
  2200  0011BA  D000               	nop2	
  2201  0011BC  0012               	return		;funcret
  2202  0011BE                     __end_of_DelayXLCD:
  2203                           	callstack 0
  2204                           
  2205 ;; *************** function _DelayPORXLCD *****************
  2206 ;; Defined at:
  2207 ;;		line 17 in file "nxlcd.c"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;		None
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;		None
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  1    wreg      void 
  2214 ;; Registers used:
  2215 ;;		wreg
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2221 ;;      Params:         0       0       0       0       0       0       0       0       0
  2222 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2223 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2224 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2225 ;;Total ram usage:        1 bytes
  2226 ;; Hardware stack levels used: 1
  2227 ;; This function calls:
  2228 ;;		Nothing
  2229 ;; This function is called by:
  2230 ;;		_OpenXLCD
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233                           
  2234                           	psect	text14
  2235  0011BE                     __ptext14:
  2236                           	callstack 0
  2237  0011BE                     _DelayPORXLCD:
  2238                           	callstack 28
  2239  0011BE                     
  2240                           ;nxlcd.c: 19:     _delay((unsigned long)((15)*(20000000/4000.0)));
  2241  0011BE  0E62               	movlw	98
  2242  0011C0  6E01               	movwf	??_DelayPORXLCD^0,c
  2243  0011C2  0E66               	movlw	102
  2244  0011C4                     u947:
  2245  0011C4  2EE8               	decfsz	wreg,f,c
  2246  0011C6  D7FE               	bra	u947
  2247  0011C8  2E01               	decfsz	??_DelayPORXLCD^0,f,c
  2248  0011CA  D7FC               	bra	u947
  2249  0011CC  0012               	return		;funcret
  2250  0011CE                     __end_of_DelayPORXLCD:
  2251                           	callstack 0
  2252                           
  2253 ;; *************** function _BusyXLCD *****************
  2254 ;; Defined at:
  2255 ;;		line 227 in file "nxlcd.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;		None
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;		None
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  1    wreg      unsigned char 
  2262 ;; Registers used:
  2263 ;;		wreg, cstack
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2269 ;;      Params:         0       0       0       0       0       0       0       0       0
  2270 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2271 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2272 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2273 ;;Total ram usage:        0 bytes
  2274 ;; Hardware stack levels used: 1
  2275 ;; Hardware stack levels required when called: 1
  2276 ;; This function calls:
  2277 ;;		_DelayFor18TCY
  2278 ;; This function is called by:
  2279 ;;		_OpenXLCD
  2280 ;;		_putsXLCD
  2281 ;;		_putrsXLCD
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           	psect	text15
  2286  000E68                     __ptext15:
  2287                           	callstack 0
  2288  000E68                     _BusyXLCD:
  2289                           	callstack 27
  2290  000E68                     
  2291                           ;nxlcd.c: 229:         LATEbits.LATE2 = 1;
  2292  000E68  848D               	bsf	141,2,c	;volatile
  2293                           
  2294                           ;nxlcd.c: 230:         LATEbits.LATE0 = 0;
  2295  000E6A  908D               	bcf	141,0,c	;volatile
  2296  000E6C                     
  2297                           ;nxlcd.c: 231:         DelayFor18TCY();
  2298  000E6C  ECEF  F008         	call	_DelayFor18TCY	;wreg free
  2299  000E70                     
  2300                           ;nxlcd.c: 232:         LATEbits.LATE1 = 1;
  2301  000E70  828D               	bsf	141,1,c	;volatile
  2302                           
  2303                           ;nxlcd.c: 233:         DelayFor18TCY();
  2304  000E72  ECEF  F008         	call	_DelayFor18TCY	;wreg free
  2305  000E76                     
  2306                           ;nxlcd.c: 249:         if(PORTD&0x80)
  2307  000E76  AE83               	btfss	131,7,c	;volatile
  2308  000E78  EF40  F007         	goto	u421
  2309  000E7C  EF42  F007         	goto	u420
  2310  000E80                     u421:
  2311  000E80  EF4D  F007         	goto	l58
  2312  000E84                     u420:
  2313  000E84                     
  2314                           ;nxlcd.c: 253:         {;nxlcd.c: 254:                 LATEbits.LATE1 = 0;
  2315  000E84  928D               	bcf	141,1,c	;volatile
  2316  000E86                     
  2317                           ;nxlcd.c: 255:                 DelayFor18TCY();
  2318  000E86  ECEF  F008         	call	_DelayFor18TCY	;wreg free
  2319  000E8A                     
  2320                           ;nxlcd.c: 256:                 LATEbits.LATE1 = 1;
  2321  000E8A  828D               	bsf	141,1,c	;volatile
  2322                           
  2323                           ;nxlcd.c: 257:                 DelayFor18TCY();
  2324  000E8C  ECEF  F008         	call	_DelayFor18TCY	;wreg free
  2325  000E90                     
  2326                           ;nxlcd.c: 258:                 LATEbits.LATE1 = 0;
  2327  000E90  928D               	bcf	141,1,c	;volatile
  2328  000E92                     
  2329                           ;nxlcd.c: 259:                 LATEbits.LATE2 = 0;
  2330  000E92  948D               	bcf	141,2,c	;volatile
  2331  000E94                     
  2332                           ;nxlcd.c: 260:                 return 1;
  2333  000E94  0E01               	movlw	1
  2334  000E96  EF56  F007         	goto	l59
  2335  000E9A                     l58:
  2336                           
  2337                           ;nxlcd.c: 263:         {;nxlcd.c: 264:                 LATEbits.LATE1 = 0;
  2338  000E9A  928D               	bcf	141,1,c	;volatile
  2339  000E9C                     
  2340                           ;nxlcd.c: 265:                 DelayFor18TCY();
  2341  000E9C  ECEF  F008         	call	_DelayFor18TCY	;wreg free
  2342  000EA0                     
  2343                           ;nxlcd.c: 266:                 LATEbits.LATE1 = 1;
  2344  000EA0  828D               	bsf	141,1,c	;volatile
  2345                           
  2346                           ;nxlcd.c: 267:                 DelayFor18TCY();
  2347  000EA2  ECEF  F008         	call	_DelayFor18TCY	;wreg free
  2348  000EA6                     
  2349                           ;nxlcd.c: 268:                 LATEbits.LATE1 = 0;
  2350  000EA6  928D               	bcf	141,1,c	;volatile
  2351  000EA8                     
  2352                           ;nxlcd.c: 269:                 LATEbits.LATE2 = 0;
  2353  000EA8  948D               	bcf	141,2,c	;volatile
  2354  000EAA                     
  2355                           ;nxlcd.c: 270:                 return 0;
  2356  000EAA  0E00               	movlw	0
  2357  000EAC                     l59:
  2358  000EAC  0012               	return		;funcret
  2359  000EAE                     __end_of_BusyXLCD:
  2360                           	callstack 0
  2361                           
  2362 ;; *************** function _DelayFor18TCY *****************
  2363 ;; Defined at:
  2364 ;;		line 12 in file "nxlcd.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;		None
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;		None
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  1    wreg      void 
  2371 ;; Registers used:
  2372 ;;		wreg
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2378 ;;      Params:         0       0       0       0       0       0       0       0       0
  2379 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2380 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2381 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2382 ;;Total ram usage:        0 bytes
  2383 ;; Hardware stack levels used: 1
  2384 ;; This function calls:
  2385 ;;		Nothing
  2386 ;; This function is called by:
  2387 ;;		_SetDDRamAddr
  2388 ;;		_BusyXLCD
  2389 ;;		_WriteCmdXLCD
  2390 ;;		_WriteDataXLCD
  2391 ;;		_SetCGRamAddr
  2392 ;;		_ReadAddrXLCD
  2393 ;;		_ReadDataXLCD
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           
  2397                           	psect	text16
  2398  0011DE                     __ptext16:
  2399                           	callstack 0
  2400  0011DE                     _DelayFor18TCY:
  2401                           	callstack 27
  2402  0011DE                     
  2403                           ;nxlcd.c: 14:     _delay((unsigned long)((20)*(20000000/4000000.0)));
  2404  0011DE  0E21               	movlw	33
  2405  0011E0                     u957:
  2406  0011E0  2EE8               	decfsz	wreg,f,c
  2407  0011E2  D7FE               	bra	u957
  2408  0011E4  F000               	nop	
  2409  0011E6  0012               	return		;funcret
  2410  0011E8                     __end_of_DelayFor18TCY:
  2411                           	callstack 0
  2412                           
  2413 ;; *************** function _check_password *****************
  2414 ;; Defined at:
  2415 ;;		line 248 in file "main.c"
  2416 ;; Parameters:    Size  Location     Type
  2417 ;;  input           2    6[COMRAM] PTR unsigned char 
  2418 ;;		 -> main@password(5), 
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;  stored_passw    5    8[COMRAM] unsigned char [5]
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  2    6[COMRAM] int 
  2423 ;; Registers used:
  2424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2430 ;;      Params:         2       0       0       0       0       0       0       0       0
  2431 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2432 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2433 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2434 ;;Total ram usage:        7 bytes
  2435 ;; Hardware stack levels used: 1
  2436 ;; Hardware stack levels required when called: 2
  2437 ;; This function calls:
  2438 ;;		_EEPROM_read_user
  2439 ;;		_strcmp
  2440 ;; This function is called by:
  2441 ;;		_main
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445                           	psect	text17
  2446  000FF0                     __ptext17:
  2447                           	callstack 0
  2448  000FF0                     _check_password:
  2449                           	callstack 28
  2450  000FF0                     
  2451                           ;main.c: 249:     unsigned char stored_password[4 + 1];;main.c: 250:     EEPROM_read_use
      +                          r(0x00, stored_password);
  2452  000FF0  0E09               	movlw	low check_password@stored_password
  2453  000FF2  6E02               	movwf	EEPROM_read_user@password^0,c
  2454  000FF4  0E00               	movlw	high check_password@stored_password
  2455  000FF6  6E03               	movwf	(EEPROM_read_user@password+1)^0,c
  2456  000FF8  0E00               	movlw	0
  2457  000FFA  EC86  F008         	call	_EEPROM_read_user
  2458  000FFE                     
  2459                           ;main.c: 251:     return strcmp(input, stored_password) == 0;
  2460  000FFE  C007  F001         	movff	check_password@input,strcmp@l
  2461  001002  C008  F002         	movff	check_password@input+1,strcmp@l+1
  2462  001006  0E09               	movlw	low check_password@stored_password
  2463  001008  6E03               	movwf	strcmp@r^0,c
  2464  00100A  0E00               	movlw	high check_password@stored_password
  2465  00100C  6E04               	movwf	(strcmp@r+1)^0,c
  2466  00100E  ECA7  F006         	call	_strcmp	;wreg free
  2467  001012  5001               	movf	?_strcmp^0,w,c
  2468  001014  1002               	iorwf	(?_strcmp+1)^0,w,c
  2469  001016  B4D8               	btfsc	status,2,c
  2470  001018  EF10  F008         	goto	u721
  2471  00101C  EF13  F008         	goto	u720
  2472  001020                     u721:
  2473  001020  0E01               	movlw	1
  2474  001022  EF14  F008         	goto	u730
  2475  001026                     u720:
  2476  001026  0E00               	movlw	0
  2477  001028                     u730:
  2478  001028  6E07               	movwf	?_check_password^0,c
  2479  00102A  6A08               	clrf	(?_check_password+1)^0,c
  2480  00102C  0012               	return		;funcret
  2481  00102E                     __end_of_check_password:
  2482                           	callstack 0
  2483                           
  2484 ;; *************** function _strcmp *****************
  2485 ;; Defined at:
  2486 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcmp.c"
  2487 ;; Parameters:    Size  Location     Type
  2488 ;;  l               2    0[COMRAM] PTR const unsigned char 
  2489 ;;		 -> main@password(5), 
  2490 ;;  r               2    2[COMRAM] PTR const unsigned char 
  2491 ;;		 -> check_password@stored_password(5), 
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;		None
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  2    0[COMRAM] int 
  2496 ;; Registers used:
  2497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2503 ;;      Params:         4       0       0       0       0       0       0       0       0
  2504 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2505 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2506 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2507 ;;Total ram usage:        6 bytes
  2508 ;; Hardware stack levels used: 1
  2509 ;; This function calls:
  2510 ;;		Nothing
  2511 ;; This function is called by:
  2512 ;;		_check_password
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           	psect	text18
  2517  000D4E                     __ptext18:
  2518                           	callstack 0
  2519  000D4E                     _strcmp:
  2520                           	callstack 29
  2521  000D4E  EFAD  F006         	goto	l1754
  2522  000D52                     l1752:
  2523  000D52  4A01               	infsnz	strcmp@l^0,f,c
  2524  000D54  2A02               	incf	(strcmp@l+1)^0,f,c
  2525  000D56  4A03               	infsnz	strcmp@r^0,f,c
  2526  000D58  2A04               	incf	(strcmp@r+1)^0,f,c
  2527  000D5A                     l1754:
  2528  000D5A  C003  FFD9         	movff	strcmp@r,fsr2l
  2529  000D5E  C004  FFDA         	movff	strcmp@r+1,fsr2h
  2530  000D62  C001  FFE1         	movff	strcmp@l,fsr1l
  2531  000D66  C002  FFE2         	movff	strcmp@l+1,fsr1h
  2532  000D6A  50DE               	movf	postinc2,w,c
  2533  000D6C  18E6               	xorwf	postinc1,w,c
  2534  000D6E  A4D8               	btfss	status,2,c
  2535  000D70  EFBC  F006         	goto	u681
  2536  000D74  EFBE  F006         	goto	u680
  2537  000D78                     u681:
  2538  000D78  EFCA  F006         	goto	l1758
  2539  000D7C                     u680:
  2540  000D7C  C001  FFD9         	movff	strcmp@l,fsr2l
  2541  000D80  C002  FFDA         	movff	strcmp@l+1,fsr2h
  2542  000D84  50DF               	movf	indf2,w,c
  2543  000D86  A4D8               	btfss	status,2,c
  2544  000D88  EFC8  F006         	goto	u691
  2545  000D8C  EFCA  F006         	goto	u690
  2546  000D90                     u691:
  2547  000D90  EFA9  F006         	goto	l1752
  2548  000D94                     u690:
  2549  000D94                     l1758:
  2550  000D94  C001  FFD9         	movff	strcmp@l,fsr2l
  2551  000D98  C002  FFDA         	movff	strcmp@l+1,fsr2h
  2552  000D9C  50DF               	movf	indf2,w,c
  2553  000D9E  6E05               	movwf	??_strcmp^0,c
  2554  000DA0  C003  FFD9         	movff	strcmp@r,fsr2l
  2555  000DA4  C004  FFDA         	movff	strcmp@r+1,fsr2h
  2556  000DA8  50DF               	movf	indf2,w,c
  2557  000DAA  6E06               	movwf	(??_strcmp+1)^0,c
  2558  000DAC  5006               	movf	(??_strcmp+1)^0,w,c
  2559  000DAE  5C05               	subwf	??_strcmp^0,w,c
  2560  000DB0  6E01               	movwf	?_strcmp^0,c
  2561  000DB2  6A02               	clrf	(?_strcmp+1)^0,c
  2562  000DB4  A0D8               	btfss	status,0,c
  2563  000DB6  0602               	decf	(?_strcmp+1)^0,f,c
  2564  000DB8  0012               	return		;funcret
  2565  000DBA                     __end_of_strcmp:
  2566                           	callstack 0
  2567                           
  2568 ;; *************** function _EEPROM_read_user *****************
  2569 ;; Defined at:
  2570 ;;		line 129 in file "main.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;  address         1    wreg     unsigned char 
  2573 ;;  password        2    1[COMRAM] PTR unsigned char 
  2574 ;;		 -> check_password@stored_password(5), 
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;  address         1    3[COMRAM] unsigned char 
  2577 ;;  i               1    4[COMRAM] unsigned char 
  2578 ;; Return value:  Size  Location     Type
  2579 ;;                  1    wreg      void 
  2580 ;; Registers used:
  2581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2582 ;; Tracked objects:
  2583 ;;		On entry : 0/0
  2584 ;;		On exit  : 0/0
  2585 ;;		Unchanged: 0/0
  2586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2587 ;;      Params:         2       0       0       0       0       0       0       0       0
  2588 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2589 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2590 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2591 ;;Total ram usage:        4 bytes
  2592 ;; Hardware stack levels used: 1
  2593 ;; Hardware stack levels required when called: 1
  2594 ;; This function calls:
  2595 ;;		_EEPROM_Read
  2596 ;; This function is called by:
  2597 ;;		_check_password
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           	psect	text19
  2602  00110C                     __ptext19:
  2603                           	callstack 0
  2604  00110C                     _EEPROM_read_user:
  2605                           	callstack 28
  2606                           
  2607                           ;incstack = 0
  2608                           ;EEPROM_read_user@address stored from wreg
  2609  00110C  6E04               	movwf	EEPROM_read_user@address^0,c
  2610  00110E                     
  2611                           ;main.c: 130:     for (unsigned char i = 0; i < 4; i++) {
  2612  00110E  0E00               	movlw	0
  2613  001110  6E05               	movwf	EEPROM_read_user@i^0,c
  2614  001112                     l1718:
  2615                           
  2616                           ;main.c: 131:         password[i] = EEPROM_Read(address + i);
  2617  001112  5005               	movf	EEPROM_read_user@i^0,w,c
  2618  001114  2402               	addwf	EEPROM_read_user@password^0,w,c
  2619  001116  6ED9               	movwf	fsr2l,c
  2620  001118  0E00               	movlw	0
  2621  00111A  2003               	addwfc	(EEPROM_read_user@password+1)^0,w,c
  2622  00111C  6EDA               	movwf	fsr2h,c
  2623  00111E  5004               	movf	EEPROM_read_user@address^0,w,c
  2624  001120  2405               	addwf	EEPROM_read_user@i^0,w,c
  2625  001122  ECE7  F008         	call	_EEPROM_Read
  2626  001126  6EDF               	movwf	indf2,c
  2627  001128                     
  2628                           ;main.c: 132:     }
  2629  001128  2A05               	incf	EEPROM_read_user@i^0,f,c
  2630  00112A  0E03               	movlw	3
  2631  00112C  6405               	cpfsgt	EEPROM_read_user@i^0,c
  2632  00112E  EF9B  F008         	goto	u631
  2633  001132  EF9D  F008         	goto	u630
  2634  001136                     u631:
  2635  001136  EF89  F008         	goto	l1718
  2636  00113A                     u630:
  2637  00113A  0012               	return		;funcret
  2638  00113C                     __end_of_EEPROM_read_user:
  2639                           	callstack 0
  2640                           
  2641 ;; *************** function _assign_default_password *****************
  2642 ;; Defined at:
  2643 ;;		line 270 in file "main.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;		None
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;  default_pass    5    6[COMRAM] unsigned char [5]
  2648 ;; Return value:  Size  Location     Type
  2649 ;;                  1    wreg      void 
  2650 ;; Registers used:
  2651 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2652 ;; Tracked objects:
  2653 ;;		On entry : 0/0
  2654 ;;		On exit  : 0/0
  2655 ;;		Unchanged: 0/0
  2656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2657 ;;      Params:         0       0       0       0       0       0       0       0       0
  2658 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2659 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2660 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2661 ;;Total ram usage:        5 bytes
  2662 ;; Hardware stack levels used: 1
  2663 ;; Hardware stack levels required when called: 2
  2664 ;; This function calls:
  2665 ;;		_EEPROM_write_user
  2666 ;;		_has_passwords
  2667 ;; This function is called by:
  2668 ;;		_main
  2669 ;; This function uses a non-reentrant model
  2670 ;;
  2671                           
  2672                           	psect	text20
  2673  0010A2                     __ptext20:
  2674                           	callstack 0
  2675  0010A2                     _assign_default_password:
  2676                           	callstack 28
  2677  0010A2                     
  2678                           ;main.c: 271:     unsigned char default_password[4 + 1] = "1234";
  2679  0010A2  EE20  F02F         	lfsr	2,assign_default_password@F4252
  2680  0010A6  EE10  F007         	lfsr	1,assign_default_password@default_password
  2681  0010AA  0E04               	movlw	4
  2682  0010AC                     u741:
  2683  0010AC  CFDB FFE3          	movff	plusw2,plusw1
  2684  0010B0  06E8               	decf	wreg,f,c
  2685  0010B2  E2FC               	bc	u741
  2686  0010B4                     
  2687                           ;main.c: 273:     if (!has_passwords()) {
  2688  0010B4  EC57  F007         	call	_has_passwords	;wreg free
  2689  0010B8  5002               	movf	?_has_passwords^0,w,c
  2690  0010BA  1003               	iorwf	(?_has_passwords+1)^0,w,c
  2691  0010BC  A4D8               	btfss	status,2,c
  2692  0010BE  EF63  F008         	goto	u751
  2693  0010C2  EF65  F008         	goto	u750
  2694  0010C6                     u751:
  2695  0010C6  EF6C  F008         	goto	l215
  2696  0010CA                     u750:
  2697  0010CA                     
  2698                           ;main.c: 274:         EEPROM_write_user(0x00, default_password);
  2699  0010CA  0E07               	movlw	low assign_default_password@default_password
  2700  0010CC  6E03               	movwf	EEPROM_write_user@password^0,c
  2701  0010CE  0E00               	movlw	high assign_default_password@default_password
  2702  0010D0  6E04               	movwf	(EEPROM_write_user@password+1)^0,c
  2703  0010D2  0E00               	movlw	0
  2704  0010D4  EC6D  F008         	call	_EEPROM_write_user
  2705  0010D8                     l215:
  2706  0010D8  0012               	return		;funcret
  2707  0010DA                     __end_of_assign_default_password:
  2708                           	callstack 0
  2709                           
  2710 ;; *************** function _has_passwords *****************
  2711 ;; Defined at:
  2712 ;;		line 278 in file "main.c"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;		None
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;  address         1    3[COMRAM] unsigned char 
  2717 ;; Return value:  Size  Location     Type
  2718 ;;                  2    1[COMRAM] int 
  2719 ;; Registers used:
  2720 ;;		wreg, status,2, status,0, cstack
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2726 ;;      Params:         2       0       0       0       0       0       0       0       0
  2727 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2728 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2729 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2730 ;;Total ram usage:        3 bytes
  2731 ;; Hardware stack levels used: 1
  2732 ;; Hardware stack levels required when called: 1
  2733 ;; This function calls:
  2734 ;;		_EEPROM_Read
  2735 ;; This function is called by:
  2736 ;;		_assign_default_password
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740                           	psect	text21
  2741  000EAE                     __ptext21:
  2742                           	callstack 0
  2743  000EAE                     _has_passwords:
  2744                           	callstack 28
  2745  000EAE                     
  2746                           ;main.c: 279:     unsigned char address = 0;
  2747  000EAE  0E00               	movlw	0
  2748  000EB0  6E04               	movwf	has_passwords@address^0,c
  2749                           
  2750                           ;main.c: 281:     while (address < 200) {
  2751  000EB2  EF6D  F007         	goto	l1772
  2752  000EB6                     l1764:
  2753                           
  2754                           ;main.c: 282:         if (EEPROM_Read(address) != 0xFF) {
  2755  000EB6  5004               	movf	has_passwords@address^0,w,c
  2756  000EB8  ECE7  F008         	call	_EEPROM_Read
  2757  000EBC  0AFF               	xorlw	255
  2758  000EBE  B4D8               	btfsc	status,2,c
  2759  000EC0  EF64  F007         	goto	u701
  2760  000EC4  EF66  F007         	goto	u700
  2761  000EC8                     u701:
  2762  000EC8  EF6C  F007         	goto	l1770
  2763  000ECC                     u700:
  2764  000ECC                     
  2765                           ;main.c: 283:             return 1;
  2766  000ECC  0E00               	movlw	0
  2767  000ECE  6E03               	movwf	(?_has_passwords+1)^0,c
  2768  000ED0  0E01               	movlw	1
  2769  000ED2  6E02               	movwf	?_has_passwords^0,c
  2770  000ED4  EF79  F007         	goto	l221
  2771  000ED8                     l1770:
  2772                           
  2773                           ;main.c: 285:         address++;
  2774  000ED8  2A04               	incf	has_passwords@address^0,f,c
  2775  000EDA                     l1772:
  2776                           
  2777                           ;main.c: 281:     while (address < 200) {
  2778  000EDA  0EC7               	movlw	199
  2779  000EDC  6404               	cpfsgt	has_passwords@address^0,c
  2780  000EDE  EF73  F007         	goto	u711
  2781  000EE2  EF75  F007         	goto	u710
  2782  000EE6                     u711:
  2783  000EE6  EF5B  F007         	goto	l1764
  2784  000EEA                     u710:
  2785  000EEA                     
  2786                           ;main.c: 288:     return 0;
  2787  000EEA  0E00               	movlw	0
  2788  000EEC  6E03               	movwf	(?_has_passwords+1)^0,c
  2789  000EEE  0E00               	movlw	0
  2790  000EF0  6E02               	movwf	?_has_passwords^0,c
  2791  000EF2                     l221:
  2792  000EF2  0012               	return		;funcret
  2793  000EF4                     __end_of_has_passwords:
  2794                           	callstack 0
  2795                           
  2796 ;; *************** function _EEPROM_Read *****************
  2797 ;; Defined at:
  2798 ;;		line 154 in file "main.c"
  2799 ;; Parameters:    Size  Location     Type
  2800 ;;  address         1    wreg     unsigned char 
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;  address         1    0[COMRAM] unsigned char 
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  1    wreg      unsigned char 
  2805 ;; Registers used:
  2806 ;;		wreg, status,2
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2812 ;;      Params:         0       0       0       0       0       0       0       0       0
  2813 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2814 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2815 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2816 ;;Total ram usage:        1 bytes
  2817 ;; Hardware stack levels used: 1
  2818 ;; This function calls:
  2819 ;;		Nothing
  2820 ;; This function is called by:
  2821 ;;		_EEPROM_read_user
  2822 ;;		_has_passwords
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826                           	psect	text22
  2827  0011CE                     __ptext22:
  2828                           	callstack 0
  2829  0011CE                     _EEPROM_Read:
  2830                           	callstack 28
  2831                           
  2832                           ;incstack = 0
  2833                           ;EEPROM_Read@address stored from wreg
  2834  0011CE  6E01               	movwf	EEPROM_Read@address^0,c
  2835  0011D0                     
  2836                           ;main.c: 155:     EEADR = address;
  2837  0011D0  C001  FFA9         	movff	EEPROM_Read@address,4009	;volatile
  2838  0011D4                     
  2839                           ;main.c: 156:     EECON1bits.EEPGD = 0;
  2840  0011D4  9EA6               	bcf	166,7,c	;volsfr
  2841  0011D6                     
  2842                           ;main.c: 157:     EECON1bits.CFGS = 0;
  2843  0011D6  9CA6               	bcf	166,6,c	;volsfr
  2844  0011D8                     
  2845                           ;main.c: 158:     EECON1bits.RD = 1;
  2846  0011D8  80A6               	bsf	166,0,c	;volsfr
  2847  0011DA                     
  2848                           ;main.c: 159:     return(EEDATA);
  2849  0011DA  50A8               	movf	168,w,c	;volatile
  2850  0011DC  0012               	return		;funcret
  2851  0011DE                     __end_of_EEPROM_Read:
  2852                           	callstack 0
  2853                           
  2854 ;; *************** function _EEPROM_write_user *****************
  2855 ;; Defined at:
  2856 ;;		line 123 in file "main.c"
  2857 ;; Parameters:    Size  Location     Type
  2858 ;;  address         1    wreg     unsigned char 
  2859 ;;  password        2    2[COMRAM] PTR unsigned char 
  2860 ;;		 -> assign_default_password@default_password(5), set_password@new_password(5), 
  2861 ;; Auto vars:     Size  Location     Type
  2862 ;;  address         1    4[COMRAM] unsigned char 
  2863 ;;  i               1    5[COMRAM] unsigned char 
  2864 ;; Return value:  Size  Location     Type
  2865 ;;                  1    wreg      void 
  2866 ;; Registers used:
  2867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2868 ;; Tracked objects:
  2869 ;;		On entry : 0/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2873 ;;      Params:         2       0       0       0       0       0       0       0       0
  2874 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2875 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2876 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2877 ;;Total ram usage:        4 bytes
  2878 ;; Hardware stack levels used: 1
  2879 ;; Hardware stack levels required when called: 1
  2880 ;; This function calls:
  2881 ;;		_EEPROM_Write
  2882 ;; This function is called by:
  2883 ;;		_set_password
  2884 ;;		_assign_default_password
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           	psect	text23
  2889  0010DA                     __ptext23:
  2890                           	callstack 0
  2891  0010DA                     _EEPROM_write_user:
  2892                           	callstack 28
  2893                           
  2894                           ;incstack = 0
  2895                           ;EEPROM_write_user@address stored from wreg
  2896  0010DA  6E05               	movwf	EEPROM_write_user@address^0,c
  2897  0010DC                     
  2898                           ;main.c: 124:     for (unsigned char i = 0; i < 4; i++) {
  2899  0010DC  0E00               	movlw	0
  2900  0010DE  6E06               	movwf	EEPROM_write_user@i^0,c
  2901  0010E0                     l1706:
  2902                           
  2903                           ;main.c: 125:         EEPROM_Write(address + i, password[i]);
  2904  0010E0  5006               	movf	EEPROM_write_user@i^0,w,c
  2905  0010E2  2403               	addwf	EEPROM_write_user@password^0,w,c
  2906  0010E4  6ED9               	movwf	fsr2l,c
  2907  0010E6  0E00               	movlw	0
  2908  0010E8  2004               	addwfc	(EEPROM_write_user@password+1)^0,w,c
  2909  0010EA  6EDA               	movwf	fsr2h,c
  2910  0010EC  50DF               	movf	indf2,w,c
  2911  0010EE  6E01               	movwf	EEPROM_Write@data^0,c
  2912  0010F0  5005               	movf	EEPROM_write_user@address^0,w,c
  2913  0010F2  2406               	addwf	EEPROM_write_user@i^0,w,c
  2914  0010F4  EC9A  F007         	call	_EEPROM_Write
  2915  0010F8                     
  2916                           ;main.c: 126:     }
  2917  0010F8  2A06               	incf	EEPROM_write_user@i^0,f,c
  2918  0010FA  0E03               	movlw	3
  2919  0010FC  6406               	cpfsgt	EEPROM_write_user@i^0,c
  2920  0010FE  EF83  F008         	goto	u621
  2921  001102  EF85  F008         	goto	u620
  2922  001106                     u621:
  2923  001106  EF70  F008         	goto	l1706
  2924  00110A                     u620:
  2925  00110A  0012               	return		;funcret
  2926  00110C                     __end_of_EEPROM_write_user:
  2927                           	callstack 0
  2928                           
  2929 ;; *************** function _EEPROM_Write *****************
  2930 ;; Defined at:
  2931 ;;		line 135 in file "main.c"
  2932 ;; Parameters:    Size  Location     Type
  2933 ;;  address         1    wreg     unsigned char 
  2934 ;;  data            1    0[COMRAM] unsigned char 
  2935 ;; Auto vars:     Size  Location     Type
  2936 ;;  address         1    1[COMRAM] unsigned char 
  2937 ;; Return value:  Size  Location     Type
  2938 ;;                  1    wreg      void 
  2939 ;; Registers used:
  2940 ;;		wreg, status,2
  2941 ;; Tracked objects:
  2942 ;;		On entry : 0/0
  2943 ;;		On exit  : 0/0
  2944 ;;		Unchanged: 0/0
  2945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2946 ;;      Params:         1       0       0       0       0       0       0       0       0
  2947 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2948 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2949 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2950 ;;Total ram usage:        2 bytes
  2951 ;; Hardware stack levels used: 1
  2952 ;; This function calls:
  2953 ;;		Nothing
  2954 ;; This function is called by:
  2955 ;;		_EEPROM_write_user
  2956 ;; This function uses a non-reentrant model
  2957 ;;
  2958                           
  2959                           	psect	text24
  2960  000F34                     __ptext24:
  2961                           	callstack 0
  2962  000F34                     _EEPROM_Write:
  2963                           	callstack 28
  2964                           
  2965                           ;incstack = 0
  2966                           ;EEPROM_Write@address stored from wreg
  2967  000F34  6E02               	movwf	EEPROM_Write@address^0,c
  2968  000F36                     l160:
  2969  000F36  B2A6               	btfsc	4006,1,c	;volsfr
  2970  000F38  EFA0  F007         	goto	u431
  2971  000F3C  EFA2  F007         	goto	u430
  2972  000F40                     u431:
  2973  000F40  EF9B  F007         	goto	l160
  2974  000F44                     u430:
  2975  000F44                     
  2976                           ;main.c: 137:     EEADR = address;
  2977  000F44  C002  FFA9         	movff	EEPROM_Write@address,4009	;volatile
  2978  000F48                     
  2979                           ;main.c: 138:     EEDATA = data;
  2980  000F48  C001  FFA8         	movff	EEPROM_Write@data,4008	;volatile
  2981  000F4C                     
  2982                           ;main.c: 139:     EECON1bits.EEPGD = 0;
  2983  000F4C  9EA6               	bcf	166,7,c	;volsfr
  2984  000F4E                     
  2985                           ;main.c: 140:     EECON1bits.CFGS = 0;
  2986  000F4E  9CA6               	bcf	166,6,c	;volsfr
  2987  000F50                     
  2988                           ;main.c: 141:     EECON1bits.WREN = 1;
  2989  000F50  84A6               	bsf	166,2,c	;volsfr
  2990  000F52                     
  2991                           ;main.c: 142:     INTCONbits.GIE = 0;
  2992  000F52  9EF2               	bcf	242,7,c	;volatile
  2993  000F54                     
  2994                           ;main.c: 144:     EECON2 = 0x55;
  2995  000F54  0E55               	movlw	85
  2996  000F56  6EA7               	movwf	167,c	;volsfr
  2997  000F58                     
  2998                           ;main.c: 145:     EECON2 = 0xAA;
  2999  000F58  0EAA               	movlw	170
  3000  000F5A  6EA7               	movwf	167,c	;volsfr
  3001  000F5C                     
  3002                           ;main.c: 146:     EECON1bits.WR = 1;
  3003  000F5C  82A6               	bsf	166,1,c	;volsfr
  3004  000F5E                     l163:
  3005  000F5E  A8A1               	btfss	161,4,c	;volatile
  3006  000F60  EFB4  F007         	goto	u441
  3007  000F64  EFB6  F007         	goto	u440
  3008  000F68                     u441:
  3009  000F68  EFAF  F007         	goto	l163
  3010  000F6C                     u440:
  3011  000F6C                     
  3012                           ;main.c: 149:     INTCONbits.GIE = 1;
  3013  000F6C  8EF2               	bsf	242,7,c	;volatile
  3014                           
  3015                           ;main.c: 150:     PIR2bits.EEIF = 0;
  3016  000F6E  98A1               	bcf	161,4,c	;volatile
  3017                           
  3018                           ;main.c: 151:     EECON1bits.WREN = 0;
  3019  000F70  94A6               	bcf	166,2,c	;volsfr
  3020  000F72  0012               	return		;funcret
  3021  000F74                     __end_of_EEPROM_Write:
  3022                           	callstack 0
  3023                           
  3024                           	psect	rparam
  3025  0000                     
  3026                           	psect	idloc
  3027                           
  3028                           ;Config register IDLOC0 @ 0x200000
  3029                           ;	unspecified, using default values
  3030  200000                     	org	2097152
  3031  200000  FF                 	db	255
  3032                           
  3033                           ;Config register IDLOC1 @ 0x200001
  3034                           ;	unspecified, using default values
  3035  200001                     	org	2097153
  3036  200001  FF                 	db	255
  3037                           
  3038                           ;Config register IDLOC2 @ 0x200002
  3039                           ;	unspecified, using default values
  3040  200002                     	org	2097154
  3041  200002  FF                 	db	255
  3042                           
  3043                           ;Config register IDLOC3 @ 0x200003
  3044                           ;	unspecified, using default values
  3045  200003                     	org	2097155
  3046  200003  FF                 	db	255
  3047                           
  3048                           ;Config register IDLOC4 @ 0x200004
  3049                           ;	unspecified, using default values
  3050  200004                     	org	2097156
  3051  200004  FF                 	db	255
  3052                           
  3053                           ;Config register IDLOC5 @ 0x200005
  3054                           ;	unspecified, using default values
  3055  200005                     	org	2097157
  3056  200005  FF                 	db	255
  3057                           
  3058                           ;Config register IDLOC6 @ 0x200006
  3059                           ;	unspecified, using default values
  3060  200006                     	org	2097158
  3061  200006  FF                 	db	255
  3062                           
  3063                           ;Config register IDLOC7 @ 0x200007
  3064                           ;	unspecified, using default values
  3065  200007                     	org	2097159
  3066  200007  FF                 	db	255
  3067                           
  3068                           	psect	config
  3069                           
  3070                           ;Config register CONFIG1L @ 0x300000
  3071                           ;	PLL Prescaler Selection bits
  3072                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  3073                           ;	System Clock Postscaler Selection bits
  3074                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  3075                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3076                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  3077  300000                     	org	3145728
  3078  300000  00                 	db	0
  3079                           
  3080                           ;Config register CONFIG1H @ 0x300001
  3081                           ;	Oscillator Selection bits
  3082                           ;	FOSC = HS, HS oscillator (HS)
  3083                           ;	Fail-Safe Clock Monitor Enable bit
  3084                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3085                           ;	Internal/External Oscillator Switchover bit
  3086                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3087  300001                     	org	3145729
  3088  300001  0C                 	db	12
  3089                           
  3090                           ;Config register CONFIG2L @ 0x300002
  3091                           ;	Power-up Timer Enable bit
  3092                           ;	PWRT = OFF, PWRT disabled
  3093                           ;	Brown-out Reset Enable bits
  3094                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  3095                           ;	Brown-out Reset Voltage bits
  3096                           ;	BORV = 3, Minimum setting 2.05V
  3097                           ;	USB Voltage Regulator Enable bit
  3098                           ;	VREGEN = OFF, USB voltage regulator disabled
  3099  300002                     	org	3145730
  3100  300002  19                 	db	25
  3101                           
  3102                           ;Config register CONFIG2H @ 0x300003
  3103                           ;	Watchdog Timer Enable bit
  3104                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3105                           ;	Watchdog Timer Postscale Select bits
  3106                           ;	WDTPS = 32768, 1:32768
  3107  300003                     	org	3145731
  3108  300003  1E                 	db	30
  3109                           
  3110                           ; Padding undefined space
  3111  300004                     	org	3145732
  3112  300004  FF                 	db	255
  3113                           
  3114                           ;Config register CONFIG3H @ 0x300005
  3115                           ;	CCP2 MUX bit
  3116                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
  3117                           ;	PORTB A/D Enable bit
  3118                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3119                           ;	Low-Power Timer 1 Oscillator Enable bit
  3120                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3121                           ;	MCLR Pin Enable bit
  3122                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3123  300005                     	org	3145733
  3124  300005  80                 	db	128
  3125                           
  3126                           ;Config register CONFIG4L @ 0x300006
  3127                           ;	Stack Full/Underflow Reset Enable bit
  3128                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  3129                           ;	Single-Supply ICSP Enable bit
  3130                           ;	LVP = OFF, Single-Supply ICSP disabled
  3131                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3132                           ;	ICPRT = OFF, ICPORT disabled
  3133                           ;	Extended Instruction Set Enable bit
  3134                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3135                           ;	Background Debugger Enable bit
  3136                           ;	DEBUG = 0x1, unprogrammed default
  3137  300006                     	org	3145734
  3138  300006  80                 	db	128
  3139                           
  3140                           ; Padding undefined space
  3141  300007                     	org	3145735
  3142  300007  FF                 	db	255
  3143                           
  3144                           ;Config register CONFIG5L @ 0x300008
  3145                           ;	Code Protection bit
  3146                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  3147                           ;	Code Protection bit
  3148                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  3149                           ;	Code Protection bit
  3150                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  3151                           ;	Code Protection bit
  3152                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  3153  300008                     	org	3145736
  3154  300008  0F                 	db	15
  3155                           
  3156                           ;Config register CONFIG5H @ 0x300009
  3157                           ;	Boot Block Code Protection bit
  3158                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  3159                           ;	Data EEPROM Code Protection bit
  3160                           ;	CPD = OFF, Data EEPROM is not code-protected
  3161  300009                     	org	3145737
  3162  300009  C0                 	db	192
  3163                           
  3164                           ;Config register CONFIG6L @ 0x30000A
  3165                           ;	Write Protection bit
  3166                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  3167                           ;	Write Protection bit
  3168                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  3169                           ;	Write Protection bit
  3170                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  3171                           ;	Write Protection bit
  3172                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  3173  30000A                     	org	3145738
  3174  30000A  0F                 	db	15
  3175                           
  3176                           ;Config register CONFIG6H @ 0x30000B
  3177                           ;	Configuration Register Write Protection bit
  3178                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  3179                           ;	Boot Block Write Protection bit
  3180                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  3181                           ;	Data EEPROM Write Protection bit
  3182                           ;	WRTD = OFF, Data EEPROM is not write-protected
  3183  30000B                     	org	3145739
  3184  30000B  E0                 	db	224
  3185                           
  3186                           ;Config register CONFIG7L @ 0x30000C
  3187                           ;	Table Read Protection bit
  3188                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3189                           ;	Table Read Protection bit
  3190                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3191                           ;	Table Read Protection bit
  3192                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3193                           ;	Table Read Protection bit
  3194                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3195  30000C                     	org	3145740
  3196  30000C  0F                 	db	15
  3197                           
  3198                           ;Config register CONFIG7H @ 0x30000D
  3199                           ;	Boot Block Table Read Protection bit
  3200                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  3201  30000D                     	org	3145741
  3202  30000D  40                 	db	64
  3203                           tosu	equ	0xFFF
  3204                           tosh	equ	0xFFE
  3205                           tosl	equ	0xFFD
  3206                           stkptr	equ	0xFFC
  3207                           pclatu	equ	0xFFB
  3208                           pclath	equ	0xFFA
  3209                           pcl	equ	0xFF9
  3210                           tblptru	equ	0xFF8
  3211                           tblptrh	equ	0xFF7
  3212                           tblptrl	equ	0xFF6
  3213                           tablat	equ	0xFF5
  3214                           prodh	equ	0xFF4
  3215                           prodl	equ	0xFF3
  3216                           indf0	equ	0xFEF
  3217                           postinc0	equ	0xFEE
  3218                           postdec0	equ	0xFED
  3219                           preinc0	equ	0xFEC
  3220                           plusw0	equ	0xFEB
  3221                           fsr0h	equ	0xFEA
  3222                           fsr0l	equ	0xFE9
  3223                           wreg	equ	0xFE8
  3224                           indf1	equ	0xFE7
  3225                           postinc1	equ	0xFE6
  3226                           postdec1	equ	0xFE5
  3227                           preinc1	equ	0xFE4
  3228                           plusw1	equ	0xFE3
  3229                           fsr1h	equ	0xFE2
  3230                           fsr1l	equ	0xFE1
  3231                           bsr	equ	0xFE0
  3232                           indf2	equ	0xFDF
  3233                           postinc2	equ	0xFDE
  3234                           postdec2	equ	0xFDD
  3235                           preinc2	equ	0xFDC
  3236                           plusw2	equ	0xFDB
  3237                           fsr2h	equ	0xFDA
  3238                           fsr2l	equ	0xFD9
  3239                           status	equ	0xFD8

Data Sizes:
    Strings     105
    Constant    16
    Data        5
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     46      51
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strcmp@r	PTR const unsigned char  size(2) Largest target is 5
		 -> check_password@stored_password(COMRAM[5]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 5
		 -> main@password(COMRAM[5]), 

    check_password@input	PTR unsigned char  size(2) Largest target is 5
		 -> main@password(COMRAM[5]), 

    get_password@password	PTR unsigned char  size(2) Largest target is 5
		 -> main@password(COMRAM[5]), set_password@new_password(COMRAM[5]), 

    EEPROM_read_user@password	PTR unsigned char  size(2) Largest target is 5
		 -> check_password@stored_password(COMRAM[5]), 

    EEPROM_write_user@password	PTR unsigned char  size(2) Largest target is 5
		 -> assign_default_password@default_password(COMRAM[5]), set_password@new_password(COMRAM[5]), 

    putsXLCD@buffer	PTR unsigned char  size(2) Largest target is 16
		 -> STR_9(CODE[15]), STR_8(CODE[14]), STR_7(CODE[7]), STR_6(CODE[7]), 
		 -> STR_5(CODE[15]), STR_4(CODE[12]), STR_3(CODE[16]), STR_2(CODE[16]), 
		 -> STR_1(CODE[10]), 


Critical Paths under _main in COMRAM

    _main->_set_password
    _show_initial->_putsXLCD
    _set_password->_get_password
    _putsXLCD->_WriteDataXLCD
    _get_password->_read_keypad
    _clean_lcd->_WriteCmdXLCD
    _initSystem->_OpenXLCD
    _OpenXLCD->_DelayPORXLCD
    _OpenXLCD->_DelayXLCD
    _OpenXLCD->_SetDDRamAddr
    _OpenXLCD->_WriteCmdXLCD
    _check_password->_strcmp
    _EEPROM_read_user->_EEPROM_Read
    _assign_default_password->_EEPROM_write_user
    _has_passwords->_EEPROM_Read
    _EEPROM_write_user->_EEPROM_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                28    28      0    6227
                                             38 COMRAM     8     8      0
                       _WriteCmdXLCD
            _assign_default_password
                     _check_password
                          _clean_lcd
                       _get_password
                         _initSystem
                           _putsXLCD
                        _read_keypad
                       _set_password
                       _show_initial
 ---------------------------------------------------------------------------------
 (1) _show_initial                                         0     0      0     861
                       _WriteCmdXLCD
                          _clean_lcd
                           _putsXLCD
 ---------------------------------------------------------------------------------
 (1) _set_password                                         7     7      0    2107
                                             31 COMRAM     7     7      0
                  _EEPROM_write_user
                       _WriteCmdXLCD
                          _clean_lcd
                       _get_password
                           _putsXLCD
 ---------------------------------------------------------------------------------
 (2) _putsXLCD                                             2     0      2     773
                                              1 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
 ---------------------------------------------------------------------------------
 (2) _get_password                                        11     9      2     791
                                             20 COMRAM    11     9      2
                      _WriteDataXLCD
                            _isdigit
                        _read_keypad
 ---------------------------------------------------------------------------------
 (3) _read_keypad                                         20    20      0     231
                                              0 COMRAM    20    20      0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _WriteDataXLCD                                        1     1      0      44
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (2) _clean_lcd                                            1     1      0      44
                                              1 COMRAM     1     1      0
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (1) _initSystem                                           0     0      0     110
                           _OpenXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0     110
                                              1 COMRAM     1     1      0
                           _BusyXLCD
                       _DelayPORXLCD
                          _DelayXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (3) _WriteCmdXLCD                                         1     1      0      44
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         1     1      0      44
                                              0 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayXLCD                                            1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _BusyXLCD                                             0     0      0       0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (4) _DelayFor18TCY                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_password                                       7     5      2     635
                                              6 COMRAM     7     5      2
                   _EEPROM_read_user
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               6     2      4     264
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _EEPROM_read_user                                     4     2      2     225
                                              1 COMRAM     4     2      2
                        _EEPROM_Read
 ---------------------------------------------------------------------------------
 (1) _assign_default_password                              5     5      0     491
                                              6 COMRAM     5     5      0
                  _EEPROM_write_user
                      _has_passwords
 ---------------------------------------------------------------------------------
 (2) _has_passwords                                        3     1      2      61
                                              1 COMRAM     3     1      2
                        _EEPROM_Read
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Read                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_write_user                                    4     2      2     406
                                              2 COMRAM     4     2      2
                       _EEPROM_Write
 ---------------------------------------------------------------------------------
 (3) _EEPROM_Write                                         2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _WriteCmdXLCD
     _DelayFor18TCY
   _assign_default_password
     _EEPROM_write_user
       _EEPROM_Write
     _has_passwords
       _EEPROM_Read
   _check_password
     _EEPROM_read_user
       _EEPROM_Read
     _strcmp
   _clean_lcd
     _WriteCmdXLCD
   _get_password
     _WriteDataXLCD
       _DelayFor18TCY
     _isdigit
     _read_keypad
   _initSystem
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
       _DelayPORXLCD
       _DelayXLCD
       _SetDDRamAddr
         _DelayFor18TCY
       _WriteCmdXLCD
   _putsXLCD
     _BusyXLCD
     _WriteDataXLCD
   _read_keypad
   _set_password
     _EEPROM_write_user
     _WriteCmdXLCD
     _clean_lcd
     _get_password
     _putsXLCD
   _show_initial
     _WriteCmdXLCD
     _clean_lcd
     _putsXLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2E      33       1       53.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      33      20        0.0%
DATA                 0      0      33       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jun 27 17:43:43 2024

                          ?_get_password 0015                                       l22 11CC  
                                     l25 11BC                                       l19 11E6  
                                     l55 0F32                                       l72 0FB0  
                                     l49 0C96                                       l81 0E66  
                                     l58 0E9A                                       l59 0EAC  
                                     l69 0FEE                                       _WR 007D31  
                                    l203 0D4C                                      l221 0EF2  
                                    l206 102C                                      l215 10D8  
                                    l160 0F36                                      l152 110A  
                                    l209 0E1C                                      l163 0F5E  
                                    l147 1168                                      l180 08C4  
                                    l165 0F6C                                      l157 113A  
                                    l181 0956                                      l166 0F72  
                                    l182 0A6E                                      l183 09A8  
                                    l184 09FA                                      l176 08A0  
                                    l192 1068                                      l169 11DC  
                                    l177 090C                                      l178 08AC  
                                    l179 08B8                                      l189 11AA  
                                    l913 10A0                                      l930 11AC  
                                    l924 0DB8                                      l928 11BE  
                                    u420 0E84                                      u500 0A6C  
                                    u421 0E80                                      u501 0A68  
                                    u430 0F44                                      u510 109A  
                                    u431 0F40                                      u511 1094  
                                    u440 0F6C                                      u520 109C  
                                    u600 0E36                                      u441 0F68  
                                    u601 0E32                                      u530 0BFA  
                                    u450 088A                                      u610 0E66  
                                    u531 0BF6                                      u611 0E62  
                                    u620 110A                                      u700 0ECC  
                                    u540 0C0E                                      u460 091A  
                                    u621 1106                                      u701 0EC8  
                                    u541 0C0A                                      u461 0916  
                                    u710 0EEA                                      u630 113A  
                                    u550 0C28                                      u470 0964  
                                    u711 0EE6                                      u631 1136  
                                    u551 0C24                                      u471 0960  
                                    u720 1026                                      u560 0C42  
                                    u480 09B6                                      u640 0CEE  
                                    u800 0AFC                                      u721 1020  
                                    u561 0C3E                                      u481 09B2  
                                    u641 0CE8                                      u801 0AF8  
                                    u730 1028                                      u570 0C5C  
                                    u490 0A08                                      u650 0CF0  
                                    u810 0B42                                      u571 0C58  
                                    u491 0A04                                      u811 0B3E  
                                    u580 0C76                                      u660 0D06  
                                    u820 0B9E                                      u741 10AC  
                                    u581 0C72                                      u661 0D02  
                                    u821 0B9A                                      u750 10CA  
                                    u590 0C90                                      u670 0D3C  
                                    u751 10C6                                      u591 0C8C  
                                    u671 0D38                                      u680 0D7C  
                                    u681 0D78                                      u690 0D94  
                                    u691 0D90                                      u907 09C0  
                                    u780 0AAA                                      u917 0A12  
                                    u781 0AA6                                      u837 0A82  
                                    u790 0ABC                                      u927 11A0  
                                    u847 0ADC                                      u791 0AB8  
                                    u937 11B2                                      u857 0B62  
                                    u947 11C4                                      u867 0E10  
                                    u957 11E0                                      u877 0CAE  
                                    u887 0924                                      u897 096E  
                  __size_of_WriteCmdXLCD 003E                                      wreg 000FE8  
                         _check_password 0FF0                                     l1060 11D0  
                                   l1062 11D4                                     l1064 11D6  
                                   l1066 11D8                                     l1068 11DA  
                                   l1510 0EA8                                     l1512 0EAA  
                                   l1504 0E9C                                     l1520 0F08  
                                   l1600 097A                                     l1506 0EA0  
                                   l1530 0F22                                     l1522 0F0A  
                                   l1610 0A08                                     l1700 10DC  
                                   l1508 0EA6                                     l1532 0F26  
                                   l1524 0F0E                                     l1516 0EF6  
                                   l1460 0FC4                                     l1540 0F76  
                                   l1620 0A6C                                     l1612 0A1E  
                                   l1604 09B6                                     l1710 10FA  
                                   l1454 11DE                                     l1534 0F28  
                                   l1526 0F10                                     l1518 0F06  
                                   l1470 0FDE                                     l1462 0FC6  
                                   l1550 0F8E                                     l1542 0F84  
                                   l1606 09CC                                     l1720 1128  
                                   l1712 110E                                     l1480 0E68  
                                   l1536 0F2C                                     l1528 0F14  
                                   l1472 0FE2                                     l1464 0FCA  
                                   l1456 0FB4                                     l1640 0BBA  
                                   l1632 0BAC                                     l1560 0FAA  
                                   l1552 0F92                                     l1544 0F86  
                                   l1616 0A4C                                     l1800 1056  
                                   l1570 0F4C                                     l1706 10E0  
                                   l1722 112A                                     l1490 0E86  
                                   l1482 0E6C                                     l1474 0FE4  
                                   l1466 0FCC                                     l1458 0FC2  
                                   l1650 0BCA                                     l1642 0BBC  
                                   l1634 0BB4                                     l1554 0FA0  
                                   l1546 0F88                                     l1618 0A50  
                                   l1730 0CA4                                     l1810 0DBA  
                                   l1802 105C                                     l1580 0F58  
                                   l1572 0F4E                                     l1564 0F36  
                                   l1708 10F8                                     l1804 0FF0  
                                   l1492 0E8A                                     l1484 0E70  
                                   l1476 0FE8                                     l1468 0FD0  
                                   l1660 0BE0                                     l1652 0BCE  
                                   l1644 0BBE                                     l1636 0BB6  
                                   l1724 1194                                     l1556 0FA4  
                                   l1548 0F8C                                     l1628 106A  
                                   l1740 0D06                                     l1732 0CBA  
                                   l1820 0DFA                                     l1812 0DC4  
                                   l1582 0F5C                                     l1574 0F50  
                                   l1566 0F44                                     l1718 1112  
                                   l1750 0D4E                                     l1806 0FFE  
                                   l1494 0E90                                     l1486 0E76  
                                   l1670 0C28                                     l1662 0BE6  
                                   l1654 0BD2                                     l1646 0BC0  
                                   l1638 0BB8                                     l1726 119A  
                                   l1558 0FA6                                     l1590 08D0  
                                   l1742 0D16                                     l1734 0CC0  
                                   l1822 0E06                                     l1814 0DD0  
                                   l1576 0F52                                     l1568 0F48  
                                   l1824 10A2                                     l1752 0D52  
                                   l1496 0E92                                     l1488 0E84  
                                   l1680 0C62                                     l1672 0C2E  
                                   l1664 0BFA                                     l1656 0BD8  
                                   l1648 0BC4                                     l1592 091A  
                                   l1584 087C                                     l1744 0D1A  
                                   l1728 0C98                                     l1816 0DD6  
                                   l1920 0A90                                     l1578 0F54  
                                   l1770 0ED8                                     l1762 0EAE  
                                   l1826 10B4                                     l1754 0D5A  
                                   l1498 0E94                                     l1682 0C76  
                                   l1674 0C42                                     l1666 0C0E  
                                   l1658 0BDC                                     l1594 0930  
                                   l1586 0894                                     l1738 0CF4  
                                   l1746 0D20                                     l1690 0E1E  
                                   l1818 0DE2                                     l1930 0AC6  
                                   l1922 0A96                                     l1914 0A70  
                                   l1764 0EB6                                     l1772 0EDA  
                                   l1828 10CA                                     l1756 0D7C  
                                   l1684 0C7C                                     l1676 0C48  
                                   l1668 0C14                                     l1780 1144  
                                   l1748 0D3C                                     l1692 0E22  
                                   l1940 0B12                                     l1932 0AD2  
                                   l1924 0A9A                                     l1916 0A74  
                                   l1774 0EEA                                     l1766 0ECC  
                                   l1758 0D94                                     l1686 0C90  
                                   l1678 0C5C                                     l1790 1160  
                                   l1782 114C                                     l1598 0964  
                                   l1694 0E36                                     l1950 0B58  
                                   l1942 0B18                                     l1934 0AEA  
                                   l1926 0AAA                                     l1918 0A78  
                                   l1792 1162                                     l1784 115A  
                                   l1696 0E46                                     l1960 0B9E  
                                   l1952 0B72                                     l1944 0B24  
                                   l1936 0AFC                                     l1928 0ABC  
                                   l1786 115C                                     l1778 113C  
                                   l1698 0E4A                                     l1794 102E  
                                   l1954 0B7C                                     l1946 0B42  
                                   l1938 0B06                                     l1788 115E  
                                   l1796 1038                                     l1948 0B4C  
                                   l1966 08E6                                     l1798 1044  
                                   l1958 0B8C                                     STR_1 0869  
                                   STR_2 0821                                     STR_3 0811  
                                   STR_4 085D                                     STR_5 0831  
                                   STR_6 0873                                     STR_7 0862  
                                   STR_8 084F                                     STR_9 0840  
                                   _RBPU 007F8F                 set_password@new_password 0022  
                        ??_has_passwords 0004                                     _main 0A70  
                                   fsr1h 000FE2                                     fsr2h 000FDA  
                                   indf2 000FDF                                     fsr1l 000FE1  
                                   fsr2l 000FD9                   __size_of_WriteDataXLCD 003E  
                       _EEPROM_read_user 110C                                     start 0000  
                           ___param_bank 000000                           ??_get_password 0017  
                   __end_of_EEPROM_Write 0F74                             _WriteCmdXLCD 0FB2  
          check_password@stored_password 0009                            ?_SetDDRamAddr 0001  
                                  ?_main 0001                                    _EEADR 000FA9  
                                  _PORTD 000F83                                    _TRISA 000F92  
                                  _TRISB 000F93                                    _TRISD 000F95  
                 __end_of_check_password 102E                             ?_read_keypad 0001  
                           main@password 0029                 ?_assign_default_password 0001  
                        __end_of_isdigit 10A2                                    tablat 000FF5  
                                  plusw1 000FE3                                    plusw2 000FDB  
                                  status 000FD8                         EEPROM_Write@data 0001  
                   __size_of_EEPROM_Read 0010                          __initialization 116A  
                           __end_of_main 0BAA                         __end_of_BusyXLCD 0EAE  
                     __size_of_DelayXLCD 0012                    __size_of_DelayPORXLCD 0010  
                         ??_SetDDRamAddr 0001                         __end_of_OpenXLCD 0C98  
                                 ??_main 0027                            __activetblptr 000002  
                          _WriteDataXLCD 0F74                 EEPROM_write_user@address 0005  
                        ?_check_password 0007                                   _ADCON0 000FC2  
                                 _ADCON1 000FC1                                   _ADCON2 000FC0  
                                 _EEDATA 000FA8                                   _EECON2 000FA7  
                   get_password@password 0015                             _DelayPORXLCD 11BE  
                                 isa$std 000001                           ?_WriteDataXLCD 0001  
                                 _strcmp 0D4E                             __pdataCOMRAM 002F  
                              ??_isdigit 0003                             __mediumconst 0000  
                                 tblptrh 000FF7                                   tblptrl 000FF6  
                                 tblptru 000FF8                         __end_of_putsXLCD 0E68  
                   __end_of_get_password 0D4E                        __end_of_DelayXLCD 11BE  
                      _EEPROM_write_user 10DA                               __accesstop 0060  
                __end_of__initialization 118A                       ?_EEPROM_write_user 0003  
                          ___rparam_used 000001                    __size_of_EEPROM_Write 0040  
                         __pcstackCOMRAM 0001                      ??_EEPROM_write_user 0005  
                     __size_of_clean_lcd 0018                 __end_of_EEPROM_read_user 113C  
              __end_of_EEPROM_write_user 110C                   __size_of_DelayFor18TCY 000A  
                           _EEPROM_Write 0F34                     __size_of_read_keypad 01F4  
                              ?_BusyXLCD 0001                          WriteCmdXLCD@cmd 0001  
                   __end_of_SetDDRamAddr 0F34                                ?_OpenXLCD 0001  
                      WriteDataXLCD@data 0001                          ??_WriteDataXLCD 0001  
                                ?_strcmp 0001                               ??_BusyXLCD 0001  
                      __end_of_clean_lcd 11AC                               ??_OpenXLCD 0002  
                  __end_of_has_passwords 0EF4                                  __Hparam 0000  
                                __Lparam 0000         __size_of_assign_default_password 0038  
                          _DelayFor18TCY 11DE                                ?_putsXLCD 0002  
                           __psmallconst 0800                            ?_set_password 0001  
                             _initSystem 113C                                  __pcinit 116A  
                                __ramtop 0800                                  __ptext0 0A70  
                                __ptext1 102E                                  __ptext2 0DBA  
                                __ptext3 0E1E                                  __ptext4 0C98  
                                __ptext5 087C                                  __ptext6 106A  
                                __ptext7 0F74                                  __ptext8 1194  
                                __ptext9 113C                         ??_check_password 0009  
                        __size_of_strcmp 006C                    __size_of_get_password 00B6  
                                _isdigit 106A               __size_of_EEPROM_write_user 0032  
                                main@key 002E                     end_of_initialization 118A  
                          ??_EEPROM_Read 0001                            __Lmediumconst 0000  
                EEPROM_read_user@address 0004                           ?_DelayFor18TCY 0001  
                                postdec1 000FE5                                  postinc0 000FEE  
                                postinc1 000FE6                                  postinc2 000FDE  
                           _get_password 0C98                           ??_set_password 0020  
                             ??_putsXLCD 0004                                  strcmp@l 0001  
                                strcmp@r 0003                                _PORTBbits 000F81  
                              _PORTDbits 000F83                            ?_show_initial 0001  
                              _TRISCbits 000F94                                _TRISEbits 000F96  
                  __size_of_SetDDRamAddr 0040                                _DelayXLCD 11AC  
                    __end_of_EEPROM_Read 11DE                              ?_initSystem 0001  
                          __pidataCOMRAM 11E8                           ??_show_initial 0004  
                      EEPROM_read_user@i 0005                             _SetDDRamAddr 0EF4  
                     SetDDRamAddr@DDaddr 0001                           __end_of_strcmp 0DBA  
                      ?_EEPROM_read_user 0002                      start_initialization 116A  
                     ??_EEPROM_read_user 0004                         _get_password$469 001B  
                      __size_of_BusyXLCD 0046                               ?_DelayXLCD 0001  
                _assign_default_password 10A2                          ??_DelayFor18TCY 0001  
                      __size_of_OpenXLCD 00EE                            ?_WriteCmdXLCD 0001  
                               ??_strcmp 0005                     has_passwords@address 0004  
                     EEPROM_write_user@i 0006                            ??_read_keypad 0001  
                   __end_of_set_password 0E1E                        get_password@index 001D  
                    __size_of_initSystem 002E  assign_default_password@default_password 0007  
                            _EEPROM_Read 11CE                          get_password@key 001F  
                         putsXLCD@buffer 0002                                _clean_lcd 1194  
                       read_keypad@F4231 0801                           ??_WriteCmdXLCD 0001  
                      __size_of_putsXLCD 004A                    __end_of_WriteDataXLCD 0FB2  
                            __smallconst 0800                                 ?_isdigit 0001  
           assign_default_password@F4252 002F                ??_assign_default_password 0007  
                    __end_of_read_keypad 0A70                     __end_of_show_initial 106A  
                               _LATEbits 000F8D                              ??_DelayXLCD 0001  
                          ?_DelayPORXLCD 0001                               ?_clean_lcd 0001  
                        OpenXLCD@lcdtype 0002                                 _PIR2bits 000FA1  
                 __size_of_has_passwords 0046                                copy_data0 117E  
                               _BusyXLCD 0E68                           ??_DelayPORXLCD 0001  
                             _EECON1bits 000FA6                                 _OpenXLCD 0BAA  
                               __Hrparam 0000                                 __Lrparam 0000  
                           ??_initSystem 0003          __end_of_assign_default_password 10DA  
                  __size_of_set_password 0064                         __size_of_isdigit 0038  
                            _read_keypad 087C                                 __ptext10 0BAA  
                               __ptext11 0FB2                                 __ptext20 10A2  
                               __ptext12 0EF4                                 __ptext21 0EAE  
                               __ptext13 11AC                                 __ptext22 11CE  
                               __ptext14 11BE                                 __ptext23 10DA  
                               __ptext15 0E68                                 __ptext24 0F34  
                               __ptext16 11DE                                 __ptext17 0FF0  
                               __ptext18 0D4E                                 __ptext19 110C  
                   __end_of_WriteCmdXLCD 0FF0                            ?_EEPROM_Write 0001  
                __size_of_check_password 003E                          read_keypad@keys 0003  
                          __size_of_main 013A                       __end_of_initSystem 116A  
              __size_of_EEPROM_read_user 0030                            _has_passwords 0EAE  
                            ??_clean_lcd 0002                                 isa$xinst 000000  
                               _putsXLCD 0E1E                             _set_password 0DBA  
                             _INTCONbits 000FF2                 __end_ofread_keypad@F4231 0811  
                               isdigit@c 0001                           ??_EEPROM_Write 0002  
                  __size_of_show_initial 003C                             ?_EEPROM_Read 0001  
                         read_keypad@col 0013                           ?_has_passwords 0002  
                     EEPROM_Read@address 0001                    __end_of_DelayFor18TCY 11E8  
              EEPROM_write_user@password 0003                             _show_initial 102E  
                   __end_of_DelayPORXLCD 11CE                 EEPROM_read_user@password 0002  
                    check_password@input 0007                      EEPROM_Write@address 0002  
